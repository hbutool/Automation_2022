Index: src/test/java/DAy8_102322/ClassAI_Hotels.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/DAy8_102322/ClassAI_Hotels.java b/src/test/java/DAy8_102322/ClassAI_Hotels.java
new file mode 100644
--- /dev/null	(date 1666750266267)
+++ b/src/test/java/DAy8_102322/ClassAI_Hotels.java	(date 1666750266267)
@@ -0,0 +1,118 @@
+package DAy8_102322;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.JavascriptExecutor;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+import org.openqa.selenium.support.ui.Select;
+
+import java.util.ArrayList;
+
+public class ClassAI_Hotels {
+    public static void main(String[] args) throws InterruptedException {
+            //setup your chromedriver with webdrivermanager
+            WebDriverManager.chromedriver().setup();
+            //initialize chrome options
+            ChromeOptions options = new ChromeOptions();
+            //add options for maximizing the chrome window
+            options.addArguments("start-maximized");
+            //options.addArguments("headless");
+            //for mac use "start-fullscreen"
+            //go to google page
+            WebDriver driver = new ChromeDriver(options);
+            //driver.navigate().to("https://www.Hotels.com");
+
+
+            ArrayList<String> destination = new ArrayList<>();
+            destination.add("Los Angeles");
+            destination.add("Houston");
+            destination.add("San Diego");
+
+            for (int i = 0; i < destination.size(); i++) {
+                driver.navigate().to("https://www.Hotels.com");
+
+                //click on going to tab
+                WebElement gointo = driver.findElement(By.xpath("//*[@class= 'uitk-fake-input uitk-form-field-trigger']"));
+                gointo.click();
+                Thread.sleep(2000);
+
+                //typing our desitnation
+                WebElement search = driver.findElement(By.xpath("//*[@placeholder='Going to']"));
+                search.sendKeys(destination.get(i));
+                Thread.sleep(2000);
+
+                //Select destination from drop down
+                driver.findElements(By.xpath("//*[@class='truncate']")).get(0).click();
+
+
+                //click TRAVELERS, then ADULT LIST TO SET BACK TO ONE
+                driver.findElement(By.xpath("//*[contains(@class, 'uitk-menu-trigger uitk')]")).click();
+                Thread.sleep(2000);
+
+                //set adults amount to '1'
+                driver.findElement(By.xpath("//*[@class= 'uitk-step-input-button']")).click();
+                //click on child age
+                driver.findElements(By.xpath("//*[@class='uitk-icon uitk-step-input-icon uitk-icon-medium']")).get(3).click();
+                Thread.sleep(1000);
+                //declare and define web elment to select child age from drop down
+                WebElement childAge = driver.findElement(By.xpath("//*[@name='child-traveler_selector_children_age_selector-0-0']"));
+                Select childAgedropdown = new Select(childAge);
+
+                childAgedropdown.selectByVisibleText("Under 1");
+                Thread.sleep(2000);
+                //  ArrayList<Integer> traveler=  new ArrayList<>();
+                //  traveler.add(1);
+                //traveler.add(3);
+
+                driver.findElement(By.xpath("//*[@id='traveler_selector_done_button']")).click();
+                Thread.sleep(2000);
+                driver.findElement(By.xpath("//*[@id='submit_button']")).click();
+                // }//end of loop
+                //click 1st hotel link
+                driver.findElements(By.xpath("//*[@class='uitk-card-link']")).get(1).click();
+                Thread.sleep(6000);
+
+                //ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());
+                Thread.sleep(2000);
+
+                ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());
+                //switch to the new tab
+                driver.switchTo().window(tabs.get(1));
+
+                driver.findElement(By.xpath("//*[@class= 'uitk-button uitk-button-medium uitk-button-has-text uitk-button-primary']")).click();
+
+                Thread.sleep(3000);
+
+
+                //to capture the dollar amount for hotel room for destination
+                String dollarValue = driver.findElement(By.xpath("//*[@class='uitk-text uitk-type-600 uitk-type-bold uitk-text-emphasis-theme']")).getText();
+                System.out.println("The amount of stay for " + destination.get(i) + " " + "is: " + dollarValue);
+
+
+                //click reserve button
+                try {
+                    driver.findElements(By.xpath("//*[@class='uitk-button uitk-button-medium uitk-button-primary']")).get(0).click();
+                } catch (Exception e) {
+                    System.out.println("unable to click reserve button " + e);}
+
+                try {
+                    String checkinDate = driver.findElement(By.xpath("//*[@class='travel-details w-full table-bc-s ph-base mt-mouse mb-tiny']")).getText();
+
+                    System.out.println("our check in dates are " + checkinDate);
+                } catch (Exception e) {
+                    System.out.println("unable to get check in date"+e); }
+                driver.close();
+                driver.switchTo().window(tabs.get(0));
+
+
+            }//end of for loop
+            driver.quit();
+        }//end of main
+    }//end of java class
+
+
+
+
Index: src/test/java/Day9_102922/T2_ImplicitWait.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day9_102922/T2_ImplicitWait.java b/src/test/java/Day9_102922/T2_ImplicitWait.java
new file mode 100644
--- /dev/null	(date 1667056964218)
+++ b/src/test/java/Day9_102922/T2_ImplicitWait.java	(date 1667056964218)
@@ -0,0 +1,58 @@
+package Day9_102922;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+import org.openqa.selenium.interactions.Actions;
+
+import java.sql.Time;
+import java.util.concurrent.TimeUnit;
+
+public class T2_ImplicitWait {
+
+    public static void main(String[] args) {
+
+        //Define Web driver as chrome driver
+        WebDriverManager.chromedriver().setup();
+        //set new chrome options
+        ChromeOptions options = new ChromeOptions();
+        //add full screen arguments to the driver
+        options.addArguments("start-fullscreen");
+
+        WebDriver driver = new ChromeDriver(options);
+
+        //declare your implicit wait
+        driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
+
+        //navigate to website
+        driver.navigate().to("https://www.usps.com");
+
+        //hover over to Send tab
+        WebElement sendTab = driver.findElement(By.xpath("//*[@id='mail-ship-width']"));
+        //declare mouse actions
+        Actions actions = new Actions(driver);
+        //always end with .perform()
+        actions.moveToElement(sendTab).perform();
+
+
+        //click on calculate a price using mouse click
+        WebElement calculatePrice = driver.findElement(By.xpath("//li[@class='tool-calc']"));
+        actions.moveToElement(calculatePrice).click().perform();
+
+
+        //double click on usps home logo
+        WebElement uspsHome = driver.findElement(By.xpath("//*[@alt='USPS.com home']"));
+        //right-clicking on usps home logo
+        actions.moveToElement(uspsHome).contextClick().perform();
+        //double-clicking on usps home logo
+        actions.moveToElement(uspsHome).doubleClick().perform();
+
+        //quit the driver
+        driver.quit();
+
+
+    }//end of method
+}//end of class
Index: src/test/java/DAy8_102322/ClassAI_Hotels1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/DAy8_102322/ClassAI_Hotels1.java b/src/test/java/DAy8_102322/ClassAI_Hotels1.java
new file mode 100644
--- /dev/null	(date 1666750050320)
+++ b/src/test/java/DAy8_102322/ClassAI_Hotels1.java	(date 1666750050320)
@@ -0,0 +1,120 @@
+package DAy8_102322;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+import org.openqa.selenium.support.ui.Select;
+
+import java.util.ArrayList;
+
+public class ClassAI_Hotels1 {
+    public static void main(String[] args) throws InterruptedException {
+        //setup your chromedriver with webdrivermanager
+        WebDriverManager.chromedriver().setup();
+        //initialize chrome options
+        ChromeOptions options = new ChromeOptions();
+        //add options for maximizing the chrome window
+        options.addArguments("start-fullscreen");
+        //go to google page
+        WebDriver driver = new ChromeDriver(options);
+
+
+        ArrayList<String> destination = new ArrayList<>();
+        destination.add("Los Angeles");
+        destination.add("Houston");
+        destination.add("San Diego");
+
+        for (int i = 0; i < destination.size(); i++) {
+            driver.navigate().to("https://www.Hotels.com");
+
+            //click on going to tab
+            WebElement gointo = driver.findElement(By.xpath("//*[@class= 'uitk-fake-input uitk-form-field-trigger']"));
+            gointo.click();
+            Thread.sleep(2000);
+
+            //typing our desitnation
+            WebElement search = driver.findElement(By.xpath("//*[@placeholder='Going to']"));
+            search.sendKeys(destination.get(i));
+            Thread.sleep(2000);
+
+            //Select destination from drop down
+            driver.findElements(By.xpath("//*[@class='truncate']")).get(0).click();
+
+
+            //click TRAVELERS, then ADULT LIST TO SET BACK TO ONE
+            driver.findElement(By.xpath("//*[contains(@class, 'uitk-menu-trigger uitk')]")).click();
+            Thread.sleep(2000);
+
+            //set adults amount to '1'
+            driver.findElement(By.xpath("//*[@class= 'uitk-step-input-button']")).click();
+            //click on child age
+            driver.findElements(By.xpath("//*[@class='uitk-icon uitk-step-input-icon uitk-icon-medium']")).get(3).click();
+            Thread.sleep(1000);
+             //declare and define web elment to select child age from drop down
+            WebElement childAge = driver.findElement(By.xpath("//*[@name='child-traveler_selector_children_age_selector-0-0']"));
+            Select childAgedropdown = new Select(childAge);
+            childAgedropdown.selectByVisibleText("Under 1");
+            Thread.sleep(2000);
+              ArrayList<Integer> traveler=  new ArrayList<>();
+              traveler.add(2);
+              traveler.add(3);
+              traveler.add(4);
+
+              for( int j = 1; j < traveler.size();j++) {
+
+                  //start child for loop for travelers# after setting the travelers # to one and have it run up to 3 or 4
+                  //clicking done on travelers tab
+                  driver.findElement(By.xpath("//*[@id='traveler_selector_done_button']")).click();
+                  Thread.sleep(2000);
+                  driver.findElement(By.xpath("//*[@id='submit_button']")).click();
+
+                  //click 1st hotel link
+                  driver.findElements(By.xpath("//*[@class='uitk-card-link']")).get(1).click();
+                  Thread.sleep(6000);
+
+                  //ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());
+                  Thread.sleep(2000);
+
+
+                  ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());
+                  //switch to the new tab
+                  driver.switchTo().window(tabs.get(1));
+
+                  driver.findElement(By.xpath("//*[@class= 'uitk-button uitk-button-medium uitk-button-has-text uitk-button-primary']")).click();
+
+                  Thread.sleep(3000);
+
+
+//to capture the dollar amount for hotel room for destination
+                  String dollarValue = driver.findElement(By.xpath("//*[@class='uitk-text uitk-type-600 uitk-type-bold uitk-text-emphasis-theme']")).getText();
+                  System.out.println("The amount of stay for " + destination.get(i) + " " + "is: " + dollarValue);
+
+
+                  //click reserve button
+                  try {
+                      driver.findElements(By.xpath("//*[@class='uitk-button uitk-button-medium uitk-button-primary']")).get(0).click();
+                  } catch (Exception e) {
+                      System.out.println("unable to click reserve button " + e);
+                  }//end of catch
+
+                  driver.close();
+                  driver.switchTo().window(tabs.get(0));
+
+
+
+              }//end of loop2
+
+
+
+            //click on travelers button
+            //driver.findElement(By.xpath("//*@class= 'uitk-menu-trigger uitk-fake-input uitk-form-field-trigger']"));
+//driver.close();
+
+        }//end of for loop
+        driver.quit();
+    }//end of main
+}//end of java class
+
Index: src/test/java/Day9_102922/T3_ExplicitWait_metLife.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day9_102922/T3_ExplicitWait_metLife.java b/src/test/java/Day9_102922/T3_ExplicitWait_metLife.java
new file mode 100644
--- /dev/null	(date 1667145544030)
+++ b/src/test/java/Day9_102922/T3_ExplicitWait_metLife.java	(date 1667145544030)
@@ -0,0 +1,33 @@
+package Day9_102922;
+
+import ReusableLibrary.ReusableActions;
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+import org.openqa.selenium.support.ui.ExpectedConditions;
+import org.openqa.selenium.support.ui.WebDriverWait;
+
+import static ReusableLibrary.ReusableActions.setUpDriver;
+
+public class T3_ExplicitWait_metLife {
+    public static void main(String[] args) {
+        //call webdriver method from reusable library
+        WebDriver driver = setUpDriver();
+        //navigate to MetLife
+        driver.navigate().to("https://www.metLife.com");
+        //hover over the solutions dropdown
+        //ReusableActions.mouseHover(driver, "//*[contains(text(), 'SOLUTIONS')]", "Solutions Dropdown");
+        //or click on solutions dropdown
+        ReusableActions.clickActionByIndex(driver, "//*[contains(text(), 'SOLUTIONS')]", 0, "Solutions Link");
+        //click on dental link
+        ReusableActions.clickAction(driver, "//*[text() = 'Dental']", "Dental Link");
+        //capture the headline title
+        String headlineTitle = ReusableActions.getTextAction(driver, "//*[@class = 'headline__title']", "Headline Title");
+        //print out the title
+        System.out.println("The headline title is " + headlineTitle);
+        //quit driver
+        driver.quit();
+    }//end of main
+}//end of class
Index: src/test/java/Day9_102922/T1_MouseActions_USPS.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day9_102922/T1_MouseActions_USPS.java b/src/test/java/Day9_102922/T1_MouseActions_USPS.java
new file mode 100644
--- /dev/null	(date 1667055319867)
+++ b/src/test/java/Day9_102922/T1_MouseActions_USPS.java	(date 1667055319867)
@@ -0,0 +1,48 @@
+package Day9_102922;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+import org.openqa.selenium.interactions.Actions;
+
+public class T1_MouseActions_USPS {
+    public static void main(String[] args) throws InterruptedException {
+        //Define Web driver as chrome driver
+        WebDriverManager.chromedriver().setup();
+        //set new chrome options
+        ChromeOptions options = new ChromeOptions();
+        //add full screen arguments to the driver
+        options.addArguments("start-fullscreen");
+
+        WebDriver driver = new ChromeDriver(options);
+
+        //navigate to website
+        driver.navigate().to("https://www.usps.com");
+        //wait for a few minutes
+        Thread.sleep(3000);
+
+        //hover over to Send tab
+        WebElement sendTab = driver.findElement(By.xpath("//*[@id='mail-ship-width']"));
+        //declare mouse actions
+        Actions actions = new Actions(driver);
+        //always end with .perform()
+        actions.moveToElement(sendTab).perform();
+
+        Thread.sleep(1000);
+        //click on calculate a price using mouse click
+        WebElement calculatePrice = driver.findElement(By.xpath("//li[@class='tool-calc']"));
+        actions.moveToElement(calculatePrice).click().perform();
+
+        Thread.sleep(2000);
+        //double click on usps home logo
+        WebElement uspsHome = driver.findElement(By.xpath("//*[@alt='USPS.com home']"));
+        //right-clicking on usps home logo
+        actions.moveToElement(uspsHome).contextClick().perform();
+        //double-clicking on usps home logo
+        actions.moveToElement(uspsHome).doubleClick().perform();
+
+    }//end of main
+}//end of class
Index: src/test/java/Day9_102922/T4_USPS_Reusable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day9_102922/T4_USPS_Reusable.java b/src/test/java/Day9_102922/T4_USPS_Reusable.java
new file mode 100644
--- /dev/null	(date 1667521011675)
+++ b/src/test/java/Day9_102922/T4_USPS_Reusable.java	(date 1667521011675)
@@ -0,0 +1,23 @@
+package Day9_102922;
+
+import ReusableLibrary.ReusableActions;
+import org.openqa.selenium.WebDriver;
+
+public class T4_USPS_Reusable {
+    public static void main(String[] args) {
+
+        //calling reusable method for set driver
+        WebDriver driver = ReusableActions.setUpDriver();
+        //navigate
+        driver.navigate().to("https://www.bing.com");
+        //enter a keyword in search field using reusable method
+        ReusableActions.sendKeysAction(driver, "//*[@name= 'q']", "soccer", "Search Field");
+        //Click on search icon using reusable method
+        ReusableActions.clickAction(driver, "//*[@id= 'search_icon']", "Search Icon");
+        //capture the result and extract out the number
+        String result = ReusableActions.getTextAction(driver, "//*[@class 'sb_count']", "Search Results");
+        System.out.println("Result is " + result);
+
+        driver.quit();
+    }//end of method
+}//end of class
Index: src/test/java/Day9_102922/T4_Reusable_own.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day9_102922/T4_Reusable_own.java b/src/test/java/Day9_102922/T4_Reusable_own.java
new file mode 100644
--- /dev/null	(date 1667521201383)
+++ b/src/test/java/Day9_102922/T4_Reusable_own.java	(date 1667521201383)
@@ -0,0 +1,26 @@
+package Day9_102922;
+
+import ReusableLibrary.ReusableActions;
+import org.openqa.selenium.WebDriver;
+
+public class T4_Reusable_own {
+    public static void main(String[] args) {
+
+
+//set up driver using reusable actions
+        WebDriver driver = ReusableActions.setUpDriver();
+
+        //navigate to the website
+        driver.navigate().to("https://www.google.com");
+        //Submit cars
+        ReusableActions.sendKeysAction(driver, "//*[@name= 'q']","cars", "SearchCars");
+        //Find Element for search google using reusable action
+        ReusableActions.clickAction(driver,"//*[@class= 'CcAdNb']", "Search Icon");
+        //Capture Text using Reusable method
+        ReusableActions.getTextAction(driver, "//*[@id= 'result-stats']","ResultCaptured");
+
+        driver.quit();
+
+
+    }//end of main
+}//end of class
Index: src/test/java/ReusableLibrary/ReusableActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ReusableLibrary/ReusableActions.java b/src/test/java/ReusableLibrary/ReusableActions.java
new file mode 100644
--- /dev/null	(date 1667541167973)
+++ b/src/test/java/ReusableLibrary/ReusableActions.java	(date 1667541167973)
@@ -0,0 +1,129 @@
+package ReusableLibrary;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.JavascriptExecutor;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+import org.openqa.selenium.interactions.Actions;
+import org.openqa.selenium.support.ui.ExpectedConditions;
+import org.openqa.selenium.support.ui.Select;
+import org.openqa.selenium.support.ui.WebDriverWait;
+
+import java.util.ArrayList;
+
+public class ReusableActions {
+    //reusable method to define and launch webdriver
+    public static WebDriver setUpDriver() {
+        //define the webdriver manager setup for chromedriver
+        WebDriverManager.chromedriver().setup();
+        //initialize chrome options
+        ChromeOptions options = new ChromeOptions();
+        //add argument to chrome options
+        options.addArguments("start-fullscreen");
+        options.addArguments("Incognito");
+        //for mac use "start-fullscreen"
+        //options.addArguments("start-fullscreen");
+        //if above does not work on mac, then try --kiosk
+        //options.addArguments("--kiosk");
+        //initialize driver with chrome options
+        WebDriver driver = new ChromeDriver(options);
+        return driver;
+    }//end of setup driver method
+
+    public static void clickAction(WebDriver driver, String xpath, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            element.click();
+        } catch (Exception e) {
+            System.out.println("Unable to click on element: " + elementName + " for reason: " + e);
+        }
+    }
+
+    public static void clickActionByIndex(WebDriver driver, String xpath, int index, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        try {
+            wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath(xpath))).get(index).click();
+        } catch (Exception e) {
+            System.out.println("Unable to click on element: " + elementName + " for reason: " + e);
+        }
+    }
+
+    public static void mouseHover(WebDriver driver, String xpath, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        //declare mouse actions
+        Actions actions = new Actions(driver);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            actions.moveToElement(element).perform();
+        } catch (Exception e) {
+            System.out.println("Unable to hover to element: " + elementName + " for reason: " + e);
+        }
+    }
+
+    public static void sendKeysAction(WebDriver driver, String xpath, String userInput, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 20);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            element.sendKeys(userInput);
+        } catch (Exception e) {
+            System.out.println("Unable to send keys to : " + elementName + " for reason: " + e);
+        }
+    }
+
+    public static String getTextAction(WebDriver driver, String xpath, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 20);
+        String textOutput = "";
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            textOutput = element.getText();
+        } catch (Exception e) {
+            System.out.println("Unable to get text for : " + elementName + " for reason: " + e);
+        }
+        return textOutput;
+    }
+    public static void submitAction(WebDriver driver, String xpath, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            element.submit();
+        } catch (Exception e) {
+            System.out.println("Unable to submit on element: " + elementName + " for reason: " + e);
+        }
+
+    }//end of submit action
+
+    public static void selectByText(WebDriver driver, String xpath, String userValue, String elementName){
+       try {
+           WebElement menu = driver.findElement(By.xpath(xpath));
+           Select dropDown = new Select(menu);
+           dropDown.selectByVisibleText(userValue);
+       }catch(Exception e){
+           System.out.println("Unable to select to element " +elementName+ " " +e);
+       }//end of try & catch
+
+
+    }//end of select Text method
+
+    public static String switchTabsByIndex(WebDriver driver, int index){
+            ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());
+            driver.switchTo().window(tabs.get(index));
+         return tabs.get(index);
+
+    }//end of switchToTabByIndex
+
+    public static void scrollByView(WebDriver driver,String xpath, String elementName) {
+        JavascriptExecutor jse = (JavascriptExecutor) driver;
+        WebElement scrollTo = driver.findElement(By.xpath(xpath));
+        jse.executeScript("arguments[0].scrollIntoView(true);", scrollTo);
+        scrollTo.click();
+
+    }//end of scrollByView
+
+}//end of class
+
+
+
Index: src/test/java/Day10_103022/T2_TestNG_GoogleSearch.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day10_103022/T2_TestNG_GoogleSearch.java b/src/test/java/Day10_103022/T2_TestNG_GoogleSearch.java
new file mode 100644
--- /dev/null	(date 1667147292493)
+++ b/src/test/java/Day10_103022/T2_TestNG_GoogleSearch.java	(date 1667147292493)
@@ -0,0 +1,37 @@
+package Day10_103022;
+
+import ReusableLibrary.ReusableActions;
+import org.openqa.selenium.WebDriver;
+import org.testng.annotations.AfterSuite;
+import org.testng.annotations.BeforeSuite;
+import org.testng.annotations.Test;
+
+public class T2_TestNG_GoogleSearch {
+WebDriver driver;
+    @BeforeSuite
+    public void SetChromeDriver(){
+        driver = ReusableActions.setUpDriver();
+    }//end of set driver method
+
+    @AfterSuite
+    public void quitTheSession(){
+        driver.quit();
+    }//end of after suite
+
+    @Test(priority = 1)
+    public void TC01_SearchForCar(){
+        driver.navigate().to("https://www.google.com");
+        //enter a car on search field
+        ReusableActions.sendKeysAction(driver,"//*[@name='q']","BMW","Search Field");
+        //hit submit on the google search button
+        ReusableActions.submitAction(driver,"//*[@name='btnK']","Google Search Button");
+    }//end of test 1
+
+    @Test(priority = 2)
+    public void TC02_CaptureSearchNumber(){
+        String result = ReusableActions.getTextAction(driver,"//*[@id='result-stats']","Search Results");
+        String[] arrayResult = result.split(" ");
+        System.out.println("Result is " + arrayResult[1]);
+    }//end of test 2
+
+}//end of class
Index: src/test/java/ReusableLibrary/Reusable_Annotations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ReusableLibrary/Reusable_Annotations.java b/src/test/java/ReusableLibrary/Reusable_Annotations.java
new file mode 100644
--- /dev/null	(date 1667754655509)
+++ b/src/test/java/ReusableLibrary/Reusable_Annotations.java	(date 1667754655509)
@@ -0,0 +1,47 @@
+package ReusableLibrary;
+
+import com.relevantcodes.extentreports.ExtentReports;
+import com.relevantcodes.extentreports.ExtentTest;
+import org.openqa.selenium.WebDriver;
+import org.testng.annotations.AfterMethod;
+import org.testng.annotations.AfterSuite;
+import org.testng.annotations.BeforeMethod;
+import org.testng.annotations.BeforeSuite;
+
+import java.lang.reflect.Method;
+
+public class Reusable_Annotations {
+    /*
+    WebDriver variable needs to get inherited to your test class but in order to do that it must be public stat
+     */
+    public static WebDriver driver;
+    public static ExtentReports reports;
+    public static ExtentTest logger;
+
+    @BeforeSuite
+    public void setTheDriver(){
+        driver = ReusableActions.setUpDriver();
+        //set the report path here
+        reports = new ExtentReports("src/main/java/HTML_Report/Automation_Report.html", true);
+    }//end of beforesuite
+
+    @BeforeMethod
+    public void captureTestName(Method testName){
+        //before every test, this method will be called and take the name of your test
+        //and it will add your test method to the html report
+        logger = reports.startTest(testName.getName());
+    }//end of before method
+
+    @AfterMethod
+    public void endLogger(){
+        reports.endTest(logger);
+    }//end of after method
+
+    @AfterSuite
+    public void quitSession(){
+        driver.quit();
+        //writing back to one html report
+        reports.flush();
+    }//end of aftersuite
+
+}//end of class
Index: src/test/java/Day11_110522/T2_Boolean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day11_110522/T2_Boolean.java b/src/test/java/Day11_110522/T2_Boolean.java
new file mode 100644
--- /dev/null	(date 1667665641434)
+++ b/src/test/java/Day11_110522/T2_Boolean.java	(date 1667665641434)
@@ -0,0 +1,49 @@
+package Day11_110522;
+
+import ReusableLibrary.ReusableActions;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.testng.annotations.AfterSuite;
+import org.testng.annotations.BeforeSuite;
+import org.testng.annotations.Test;
+
+import java.util.ArrayList;
+
+public class T2_Boolean {
+
+    WebDriver driver;
+
+    @BeforeSuite
+    public void SetChromeDriver() {
+        driver = ReusableActions.setUpDriver();
+    }//end of before suite
+
+    @AfterSuite
+    public void quitTheSession() {
+        driver.quit();
+    }//end of after suite
+
+    //verify that by default sign in option should be checked
+
+    @Test(priority = 1)
+    public void tc001_verifySignedInOptionIsChecked(){
+        //first navigate to yahoo homepage
+        driver.navigate().to("https://www.yahoo.com/");
+        //next we need to click on sign in button
+        ReusableActions.clickAction(driver, "//*[@class = '_yb_1933e']", "Sign in button");
+        //we need to verify that signed in option is checked
+        boolean isSignInChecked = driver.findElement(By.xpath("//*[@id= 'persistent']")).isSelected();
+        System.out.println("The checkbox check condition is " + isSignInChecked);
+    }//end of test 1
+
+    @Test(dependsOnMethods = "tc001_verifySignedInOptionIsChecked")
+    public void tc002_verifySignedInOptionIsUnChecked(){
+        //click on check box to uncheck it
+        ReusableActions.clickAction(driver, "//*[@class = 'stay-signed-in checkbox-container']", "SignedInCheckBox");
+        //we need to verify that signed in option is checked
+        boolean isSignInChecked = driver.findElement(By.xpath("//*[@id= 'persistent']")).isSelected();
+        System.out.println("The checbox check condition is: " + isSignInChecked);
+
+    }//end of test2
+
+}//end of class
Index: src/test/java/Day10_103022/T3_TestNG.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day10_103022/T3_TestNG.java b/src/test/java/Day10_103022/T3_TestNG.java
new file mode 100644
--- /dev/null	(date 1667523214691)
+++ b/src/test/java/Day10_103022/T3_TestNG.java	(date 1667523214691)
@@ -0,0 +1,39 @@
+package Day10_103022;
+
+import ReusableLibrary.ReusableActions;
+import org.openqa.selenium.WebDriver;
+import org.testng.annotations.AfterSuite;
+import org.testng.annotations.BeforeSuite;
+import org.testng.annotations.Test;
+
+public class T3_TestNG {
+
+    WebDriver driver;
+    @BeforeSuite
+    public void SetChromeDriver(){
+        driver = ReusableActions.setUpDriver();
+    }//end of set driver method
+    @AfterSuite
+    public void quitTheSession(){
+        driver.quit();
+    }//end of after suite
+    @Test()
+    public void SearchForCar(){
+        driver.navigate().to("https://www.google.com");
+        //enter a car on search field
+        ReusableActions.sendKeysAction(driver,"//*[@name='q']","BMW","Search Field");
+        //hit submit on the google search button
+        ReusableActions.submitAction(driver,"//*[@name='btnK']","Google Search Button");
+    }//end of test 1
+
+    //since we can not search without navigating to google.com
+//we use dependsonmethods to execute test 1 first
+    @Test(dependsOnMethods = "SearchForCar")
+    public void CaptureSearchNumber(){
+        String result = ReusableActions.getTextAction(driver,"//*[@id='result-stats']","Search Results");
+        String[] arrayResult = result.split(" ");
+        System.out.println("Result is " + arrayResult[1]);
+
+    }//end of test
+}//end of class
+
Index: src/test/java/Day13_111222/T1_screenshot_Yahoo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day13_111222/T1_screenshot_Yahoo.java b/src/test/java/Day13_111222/T1_screenshot_Yahoo.java
new file mode 100644
--- /dev/null	(date 1668269556381)
+++ b/src/test/java/Day13_111222/T1_screenshot_Yahoo.java	(date 1668269556381)
@@ -0,0 +1,21 @@
+package Day13_111222;
+
+import ReusableLibrary.Reusable_Actions_Logger;
+import ReusableLibrary.Reusable_Annotations;
+import com.relevantcodes.extentreports.LogStatus;
+import org.openqa.selenium.By;
+import org.testng.annotations.Test;
+
+public class T1_screenshot_Yahoo extends Reusable_Annotations {
+    @Test(priority = 1)
+    public void tc001_verifySignedInOptionIsChecked(){
+        //first navigate to yahoo homepage
+        driver.navigate().to("https://www.yahoo.com/");
+        //next we need to click on sign in button
+        //this will fail because the xpath is incorrect (screenshot should be attached to the report)
+        Reusable_Actions_Logger.clickAction(driver, "//*[@class= '_yb_1i22]", logger, "Sign In");
+        //we need to verify that sign in option is checked
+        boolean isSignInChecked = driver.findElement(By.xpath("//*[@id= 'persistent']")).isSelected();
+        logger.log(LogStatus.INFO, "The checkbox check condition is: " + isSignInChecked);
+    }//end of test 1
+}//end of class
Index: src/test/java/Day10_103022/T4_TestingNG.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day10_103022/T4_TestingNG.java b/src/test/java/Day10_103022/T4_TestingNG.java
new file mode 100644
--- /dev/null	(date 1667536285224)
+++ b/src/test/java/Day10_103022/T4_TestingNG.java	(date 1667536285224)
@@ -0,0 +1,42 @@
+package Day10_103022;
+
+import ReusableLibrary.ReusableActions;
+import org.openqa.selenium.WebDriver;
+import org.testng.annotations.AfterSuite;
+import org.testng.annotations.BeforeSuite;
+import org.testng.annotations.Test;
+
+import java.util.ArrayList;
+
+public class T4_TestingNG {
+    WebDriver driver;
+    @BeforeSuite
+    public void SetChromeDriver() {
+        driver = ReusableActions.setUpDriver();
+    }//end of set driver method
+    @AfterSuite
+    public void quitTheSession() {
+        driver.quit();
+    }//end of after suite
+    @Test(priority = 1)
+    public void SearchForCar() {
+        //add sports to search criteria
+        ArrayList<String> sports = new ArrayList<>();
+        sports.add("Soccer");
+        sports.add("Basketball");
+        sports.add("Tennis");
+        for (int i = 0; i < sports.size(); i++) {
+            driver.navigate().to("https://www.google.com");
+            //enter a car on search field
+            ReusableActions.sendKeysAction(driver, "//*[@name='q']", sports.get(i), "Search Field");
+            //hit submit on the google search button
+            ReusableActions.submitAction(driver, "//*[@name='btnK']", "Google Search Button");
+            //capture result text
+            String result = ReusableActions.getTextAction(driver, "//*[@id='result-stats']", "Search Results");
+            //split result for the number
+            String[] arrayResult = result.split(" ");
+            //print number to the console
+            System.out.println("Result is " + arrayResult[1]);
+        }//end of for loop
+    }//end of test 1
+}//end of class
Index: src/test/java/Day11_110522/T1_WebElements_List.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day11_110522/T1_WebElements_List.java b/src/test/java/Day11_110522/T1_WebElements_List.java
new file mode 100644
--- /dev/null	(date 1667661656993)
+++ b/src/test/java/Day11_110522/T1_WebElements_List.java	(date 1667661656993)
@@ -0,0 +1,50 @@
+package Day11_110522;
+
+import ReusableLibrary.ReusableActions;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.testng.annotations.AfterSuite;
+import org.testng.annotations.BeforeSuite;
+import org.testng.annotations.Test;
+
+import java.util.ArrayList;
+
+public class T1_WebElements_List {
+    WebDriver driver;
+    ArrayList<WebElement> totalMenuHeaders, mainMenuHeaders;
+
+    @BeforeSuite
+    public void SetChromeDriver() {
+        driver = ReusableActions.setUpDriver();
+        //navigate to usps.com home page
+        driver.navigate().to("https://www.usps.com/");
+        //store all the elements of the menu header into an arraylist of webelements
+        totalMenuHeaders = new ArrayList<>(driver.findElements(By.xpath("//*[@class = 'nav-list']/li")));
+    }//end of set driver method
+
+    @AfterSuite
+    public void quitTheSession() {
+        driver.quit();
+    }//end of after suite
+
+    //Test Case 1 should verify the total count of the displayed menu headers
+    @Test(priority = 1)
+    public void tc001_verifyTotalCountofMenuHeaders() {
+        System.out.println("The total number of menu headers is " + totalMenuHeaders.size());
+    }//end of test 1
+
+    //click on the first dropdown
+    @Test(priority = 2)
+    public void tc002_clickOnTheFirstDropDown() {
+        totalMenuHeaders.get(0).click();
+    }//end of test 2
+
+    //verify the sub menu headers
+    @Test(priority = 3)
+        public void tc003_verifyCountOfMainMenuHeaders () {
+            mainMenuHeaders = new ArrayList<>(driver.findElements(By.xpath("//*[@class = 'menuheader']")));
+            System.out.println("The total number of main menu headers is: " + mainMenuHeaders.size());
+    }//end of test 3
+}//end of class
+
Index: src/test/java/ActionItems/AI4_2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ActionItems/AI4_2.java b/src/test/java/ActionItems/AI4_2.java
new file mode 100644
--- /dev/null	(date 1667539791714)
+++ b/src/test/java/ActionItems/AI4_2.java	(date 1667539791714)
@@ -0,0 +1,104 @@
+package ActionItems;
+
+import ReusableLibrary.ReusableActions;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.interactions.Actions;
+import org.testng.annotations.AfterSuite;
+import org.testng.annotations.BeforeSuite;
+import org.testng.annotations.Test;
+
+public class AI4_2 {
+    WebDriver driver;
+    @BeforeSuite
+    public void setUpDriver(){
+        driver= ReusableActions.setUpDriver();
+    }//end of before suit
+
+
+    @AfterSuite
+    public void quitSession(){
+        driver.quit();
+    }//end of after suit
+
+
+    @Test(priority = 0)
+    public void TestCase_1(){
+        //1.Navigate to UHC.com
+        driver.navigate().to("https://www.uhc.com/");
+
+        //handle pop up window
+        try {
+            //if the pop up is displayed then click on no
+            driver.findElement(By.xpath("//*[@id='ip-no']")).click();
+        } catch (Exception e) {
+            System.out.println("Unable to find pop up window " + e);
+        }//end of popUp Action
+
+        //cLick on find a Doctor link
+        ReusableActions.clickAction(driver,"//*[@aria-label='Find a doctor']","Find a Doctor");
+
+        //Scroll into view by Find a dentist
+
+
+        WebElement MoveToView= driver.findElement(By.xpath("//*[contains(text(),'Find a dentist']"));
+        // Actions class with moveToElement()
+        Actions Move = new Actions(driver);
+        Move.moveToElement(MoveToView);
+        Move.perform();
+        //click on find a dentist
+        ReusableActions.clickAction(driver,"//*[text()='Find a dentist']","Find a dentist");
+        //Switch to new tab
+        ReusableActions.switchTabsByIndex(driver,1);
+        //click on Employer and individual plans
+        ReusableActions.clickActionByIndex(driver,"//*[@class='gs-option']",0,"Employer and individual plans");
+    }// End of test case 1
+    @Test(priority = 1)
+    public void TestCase_2() throws InterruptedException {
+        //Enter a zip code
+        ReusableActions.sendKeysAction(driver,"//*[@id='location']","10036","Enter a zip code");
+        Thread.sleep(1000);
+        //Click on continue button
+        ReusableActions.submitAction(driver,"//*[@class='action-btn dialog-btn noZip']","continue button");
+        //CLick on National options ppo 30
+        ReusableActions.clickAction(driver,"//*[@class='sc-jomqko TEkcT']","National options ppo 30");
+        //CLick on General dentist
+        ReusableActions.clickAction(driver,"//*[text()='General Dentists']","General Dentists");
+    }// End of test case 2
+    @Test(priority = 2)
+    public void TestCase_3(){
+        //1.Select from drop down
+        ReusableActions.selectByText(driver,"//*[@id='distance']","Within 5 Miles","Select a mile");
+        //2.Click on doctor name
+        ReusableActions.clickActionByIndex(driver,"//*[@id='provider-name-link']",0,"first doctor name");
+        //3.click on save button
+        ReusableActions.clickAction(driver,"//*[text()='Save']","save button");
+        //4.Capture and print out element names
+        ReusableActions.getTextAction(driver,"//*[@id='label__selectedLocation0']","ADDRESS");
+        ReusableActions.getTextAction(driver,"//*[@data-test-id='distance-away']","MILES");
+        ReusableActions.getTextAction(driver,"//*[@class='status-label']","NETWORK");
+        //click on close
+        ReusableActions.clickAction(driver,"//*[@class='action-btn']","click on close");
+        //close tab
+        driver.close();
+
+    }// End of test case 3
+
+    @Test(priority = 3)
+    public void TestCase_4(){
+        //1.Switch back to default tab
+        ReusableActions.switchTabsByIndex(driver,0);
+        //2.enter Key word Doctor
+        ReusableActions.sendKeysAction(driver,"//*[@id='search-desktop']","Doctor","Key word Doctor");
+        //3.click on search icon
+        ReusableActions.clickAction(driver,"//*[@id='search__button-desktop']","click on search icon");
+        //4.Capture result
+        String result=ReusableActions.getTextAction(driver,"//*[@id='search-results-count__header']","Capture result");
+        String[] ResultSplit=result.split(" ");
+        System.out.println("search result for Doctor is" + " " + ResultSplit[2]);
+
+    }// End of test case 4
+
+
+}//end of java
Index: src/test/java/ActionItems/Ai4_1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ActionItems/Ai4_1.java b/src/test/java/ActionItems/Ai4_1.java
new file mode 100644
--- /dev/null	(date 1667541264548)
+++ b/src/test/java/ActionItems/Ai4_1.java	(date 1667541264548)
@@ -0,0 +1,46 @@
+package ActionItems;
+
+import ReusableLibrary.ReusableActions;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.testng.annotations.BeforeSuite;
+import org.testng.annotations.Test;
+
+public class Ai4_1 {
+    //Declare the local driver outside to use it to reuse it with other annotations methods
+    WebDriver driver;
+
+//Before Suite will set the driver you are using
+
+    @BeforeSuite
+    public void SetDriver() {
+        driver = ReusableActions.setUpDriver();
+    }//end of set method prerequisite
+
+    //test case 1: Navigate to UHC.com
+    @Test
+    public void FindaDoctor(){
+        driver.navigate().to("https://www.UHC.com");
+        //select on Doctors link
+        ReusableActions.scrollByView(driver, "//*[@class= 'find-doctor position-relative  cta button-style__outline-blue cta--remove-icon lg-items-center lg-flex']", "FindDoctor");
+        //handle pop up window
+        try{
+            driver.findElement(By.xpath("//*[@id= 'ip-no']")).click();
+        }catch (Exception e) {
+            System.out.println("Unable to select pop up window " + e);
+
+        }//End of try and catch
+        ReusableActions.switchTabsByIndex(driver, 1);
+
+        //select the Find a Dentist
+        ReusableActions.scrollByView(driver, "//*[@aria-label= 'Find a dentist Opens a new window']","Find dentist");
+
+
+
+
+
+
+    }//end of test 1
+
+}//end of java
+
Index: src/test/java/ActionItems/AI4_3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ActionItems/AI4_3.java b/src/test/java/ActionItems/AI4_3.java
new file mode 100644
--- /dev/null	(date 1667538773562)
+++ b/src/test/java/ActionItems/AI4_3.java	(date 1667538773562)
@@ -0,0 +1,101 @@
+package ActionItems;
+
+import ReusableLibrary.ReusableActions;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.testng.annotations.AfterSuite;
+import org.testng.annotations.BeforeSuite;
+import org.testng.annotations.Test;
+
+public class AI4_3 {
+    WebDriver driver;
+    @BeforeSuite
+    public void setUpDriver(){
+        driver= ReusableActions.setUpDriver();
+    }//end of before suit
+
+
+    @AfterSuite
+    public void quitSession(){
+        driver.quit();
+    }//end of after suit
+
+
+    @Test(priority = 0)
+    public void TestCase_1(){
+        //1.Navigate to UHC.com
+        driver.navigate().to("https://www.uhc.com/");
+
+        //cLick on find a Doctor link
+        ReusableActions.clickAction(driver,"//*[@aria-label='Find a doctor']","Find a Doctor");
+
+        //handle pop up window
+        try {
+            //if the pop up is displayed then click on no
+            driver.findElement(By.xpath("//*[@id='ip-no']")).click();
+        } catch (Exception e) {
+            System.out.println("Unable to find pop up window " + e);
+        }//end of popUp Action
+
+        //Scroll into view by Find a dentist
+        ReusableActions.scrollByView(driver, "//*[text()='Find a dentist']", "Find a dentist");
+
+        /* WebElement MoveToView= driver.findElement(By.xpath("//*[text()='Find a dentist']"));
+        // Actions class with moveToElement()
+        Actions Move = new Actions(driver);
+        Move.moveToElement(MoveToView);
+        Move.perform();*/
+        //click on find a dentist
+        ReusableActions.clickAction(driver,"//*[text()='Find a dentist']","Find a dentist");
+        //Switch to new tab
+        ReusableActions.switchTabsByIndex(driver,1);
+        //click on Employer and individual plans
+        ReusableActions.clickActionByIndex(driver,"//*[@class='gs-option']",0,"Employer and individual plans");
+    }// End of test case 1
+    @Test(priority = 1)
+    public void TestCase_2() throws InterruptedException {
+        //Enter a zip code
+        ReusableActions.sendKeysAction(driver,"//*[@id='location']","10036","Enter a zip code");
+        Thread.sleep(1000);
+        //Click on continue button
+        ReusableActions.submitAction(driver,"//*[@class='action-btn dialog-btn noZip']","continue button");
+        //CLick on National options ppo 30
+        ReusableActions.clickAction(driver,"//*[@class='sc-jomqko TEkcT']","National options ppo 30");
+        //CLick on General dentist
+        ReusableActions.clickAction(driver,"//*[text()='General Dentists']","General Dentists");
+    }// End of test case 2
+    @Test(priority = 2)
+    public void TestCase_3(){
+        //1.Select from drop down
+        ReusableActions.selectByText(driver,"//*[@id='distance']","Within 5 Miles","Select a mile");
+        //2.Click on doctor name
+        ReusableActions.clickActionByIndex(driver,"//*[@id='provider-name-link']",0,"first doctor name");
+        //3.click on save button
+        ReusableActions.clickAction(driver,"//*[text()='Save']","save button");
+        //4.Capture and print out element names
+        ReusableActions.getTextAction(driver,"//*[@id='label__selectedLocation0']","ADDRESS");
+        ReusableActions.getTextAction(driver,"//*[@data-test-id='distance-away']","MILES");
+        ReusableActions.getTextAction(driver,"//*[@class='status-label']","NETWORK");
+        //click on close
+        ReusableActions.clickAction(driver,"//*[@class='action-btn']","click on close");
+        //close tab
+        driver.close();
+
+    }// End of test case 3
+
+    @Test(priority = 3)
+    public void TestCase_4(){
+        //1.Switch back to default tab
+        ReusableActions.switchTabsByIndex(driver,0);
+        //2.enter Key word Doctor
+        ReusableActions.sendKeysAction(driver,"//*[@id='search-desktop']","Doctor","Key word Doctor");
+        //3.click on search icon
+        ReusableActions.clickAction(driver,"//*[@id='search__button-desktop']","click on search icon");
+        //4.Capture result
+        String result=ReusableActions.getTextAction(driver,"//*[@id='search-results-count__header']","Capture result");
+        String[] ResultSplit=result.split(" ");
+        System.out.println("search result for Doctor is" + " " + ResultSplit[2]);
+
+    }// End of test case 4
+
+}//end of java
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1664636342718)
+++ b/.idea/misc.xml	(date 1664636342718)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="openjdk-19" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: src/test/java/Day12_110622/T1_ExtentReport_YahooScenario.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day12_110622/T1_ExtentReport_YahooScenario.java b/src/test/java/Day12_110622/T1_ExtentReport_YahooScenario.java
new file mode 100644
--- /dev/null	(date 1667754806337)
+++ b/src/test/java/Day12_110622/T1_ExtentReport_YahooScenario.java	(date 1667754806337)
@@ -0,0 +1,66 @@
+package Day12_110622;
+
+import ReusableLibrary.ReusableActions;
+import com.relevantcodes.extentreports.ExtentReports;
+import com.relevantcodes.extentreports.ExtentTest;
+import com.relevantcodes.extentreports.LogStatus;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.testng.annotations.AfterSuite;
+import org.testng.annotations.BeforeSuite;
+import org.testng.annotations.Test;
+
+public class T1_ExtentReport_YahooScenario {
+    WebDriver driver;
+    ExtentReports reports;
+    ExtentTest logger;
+    @BeforeSuite
+    public void setDriver(){
+        driver = ReusableActions.setUpDriver();
+        reports = new ExtentReports("src/main/java/HTML_Report/Automation_Report.html",true);
+    }//end of BeforeSuite
+    @AfterSuite
+    public void quitSession(){
+        driver.quit();
+        reports.flush(); //writing the logs back to the report
+    }//end of AfterSuite
+
+    @Test(priority = 1)
+    public void tc001_verifySignedInOptionIsChecked() throws InterruptedException {
+        //set the name of the test case to the report by using logger concept
+        logger = reports.startTest("tc001_verifySignedInOptionIsChecked");
+
+        //first navigate to yahoo homepage
+        driver.navigate().to("https://www.yahoo.com/");
+        //next we need to click on sign in button
+        Thread.sleep(3000);
+        driver.findElement(By.xpath("//*[@class = '_yb_1933e']")).click();
+        logger.log(LogStatus.PASS,"Successfully clicked on Sign in button");
+
+        //we need to verify that signed in option is checked
+        boolean isSignInChecked = driver.findElement(By.xpath("//*[@id= 'persistent']")).isSelected();
+        System.out.println("The checkbox check condition is: " + isSignInChecked);
+        logger.log(LogStatus.INFO,"The checkbox check condition is: " + isSignInChecked);
+
+        //end the logger for test 1
+        reports.endTest(logger);
+    }//end of test 1
+
+    @Test(dependsOnMethods = "tc001_verifySignedInOptionIsChecked")
+    public void tc002_verifySignedInOptionIsUnChecked() {
+        //set the name of the test case to the report by using logger concept
+        logger = reports.startTest("tc002_verifySignedInOptionIsUnChecked");
+
+        //click on check box to uncheck it
+        driver.findElement(By.xpath("//*[@class= 'stay-signed-in checkbox-container']")).click();
+        logger.log(LogStatus.PASS,"Successfully unchecked on checkbox");
+
+        //we need to verify that signed in option is checked
+        boolean isSignInChecked = driver.findElement(By.xpath("//*[@id= 'persistent']")).isSelected();
+        System.out.println("The checkbox check condition is: " + isSignInChecked);
+        logger.log(LogStatus.INFO,"The checkbox check condition is: " + isSignInChecked);
+
+        //end the logger for test 2
+        reports.endTest(logger);
+    }//end of test 2
+}//end of class
Index: src/main/java/ReusableLibrary/Reusable_Actions_Logger.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ReusableLibrary/Reusable_Actions_Logger.java b/src/main/java/ReusableLibrary/Reusable_Actions_Logger.java
new file mode 100644
--- /dev/null	(date 1668271494156)
+++ b/src/main/java/ReusableLibrary/Reusable_Actions_Logger.java	(date 1668271494156)
@@ -0,0 +1,162 @@
+package ReusableLibrary;
+
+import com.relevantcodes.extentreports.ExtentTest;
+import com.relevantcodes.extentreports.LogStatus;
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.apache.commons.io.FileUtils;
+import org.openqa.selenium.*;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+import org.openqa.selenium.interactions.Actions;
+import org.openqa.selenium.support.ui.ExpectedConditions;
+import org.openqa.selenium.support.ui.Select;
+import org.openqa.selenium.support.ui.WebDriverWait;
+
+import java.io.File;
+import java.util.ArrayList;
+
+public class Reusable_Actions_Logger {
+
+    //reusable method to define and launch webdriver
+    public static WebDriver setUpDriver() {
+        //define the webdriver manager setup for chromedriver
+        WebDriverManager.chromedriver().setup();
+        //initialize chrome options
+        ChromeOptions options = new ChromeOptions();
+        //add argument to chrome options
+        options.addArguments("start-fullscreen");
+        options.addArguments("Incognito");
+        //for mac use "start-fullscreen"
+        //options.addArguments("start-fullscreen");
+        //if above does not work on mac, then try --kiosk
+        //options.addArguments("--kiosk");
+        //initialize driver with chrome options
+        WebDriver driver = new ChromeDriver(options);
+        return driver;
+    }//end of setup driver method
+
+    public static void clickAction(WebDriver driver, String xpath, ExtentTest logger, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            element.click();
+        } catch (Exception e) {
+            System.out.println("Unable to click on element: " + elementName + " for reason: " + e);
+            getScreenShot(driver, elementName, logger);
+        }
+    }
+
+    public static void clickActionByIndex(WebDriver driver, String xpath, int index, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        try {
+            wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath(xpath))).get(index).click();
+        } catch (Exception e) {
+            System.out.println("Unable to click on element: " + elementName + " for reason: " + e);
+        }
+    }
+
+    public static void mouseHover(WebDriver driver, String xpath, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        //declare mouse actions
+        Actions actions = new Actions(driver);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            actions.moveToElement(element).perform();
+        } catch (Exception e) {
+            System.out.println("Unable to hover to element: " + elementName + " for reason: " + e);
+        }
+    }
+
+    public static void sendKeysAction(WebDriver driver, String xpath, String userInput, ExtentTest logger, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 20);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            element.sendKeys(userInput);
+            logger.log(LogStatus.PASS, "Successfully submitted" +elementName);
+
+        } catch (Exception e) {
+            System.out.println("Unable to send keys to : " + elementName + " for reason: " + e);
+            logger.log(LogStatus.FAIL, "Unable to send keys to: " +elementName + "for reason " + e);
+        }
+    }
+
+    public static String getTextAction(WebDriver driver, String xpath, ExtentTest logger, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 20);
+        String textOutput = "";
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            textOutput = element.getText();
+            logger.log(LogStatus.PASS, "Successfully capture a text on " + elementName);
+        } catch (Exception e) {
+            System.out.println("Unable to get text for : " + elementName + " for reason: " + e);
+            logger.log(LogStatus.FAIL, "Unable to get text for : " +elementName + " for reason is " + e);
+        }
+        return textOutput;
+    }
+    public static void submitAction(WebDriver driver, String xpath, ExtentTest logger, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            element.submit();
+            logger.log(LogStatus.PASS, "Successfully submit on " + elementName);
+        } catch (Exception e) {
+            System.out.println("Unable to submit on element: " + elementName + " for reason: " + e);
+            logger.log(LogStatus.FAIL, "Unable to submit on element: " + elementName + "for reason: " + e);
+        }
+
+    }//end of submit action
+
+    public static void selectByText(WebDriver driver, String xpath, String userValue, String elementName){
+        try {
+            WebElement menu = driver.findElement(By.xpath(xpath));
+            Select dropDown = new Select(menu);
+            dropDown.selectByVisibleText(userValue);
+        }catch(Exception e){
+            System.out.println("Unable to select to element " +elementName+ " " +e);
+        }//end of try & catch
+
+
+    }//end of select Text method
+
+    public static String switchTabsByIndex(WebDriver driver, int index){
+        ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());
+        driver.switchTo().window(tabs.get(index));
+        return tabs.get(index);
+
+    }//end of switchToTabByIndex
+
+    public static void scrollByView(WebDriver driver,String xpath, String elementName) {
+        JavascriptExecutor jse = (JavascriptExecutor) driver;
+        WebElement scrollTo = driver.findElement(By.xpath(xpath));
+        jse.executeScript("arguments[0].scrollIntoView(true);", scrollTo);
+        scrollTo.click();
+
+    }//end of scrollByView
+    public static void getScreenShot(WebDriver driver, String imageName, ExtentTest logger) {
+        try {
+            String fileName = imageName + ".png";
+            String directory = null;
+            String snPath = null;
+            directory = "src/main/java/HTML_Report/Screenshots/";
+            snPath = "Screenshots//";
+            File sourceFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
+            FileUtils.copyFile(sourceFile, new File(directory + fileName));
+            //String imgPath = directory + fileName;
+            String image = logger.addScreenCapture(snPath + fileName);
+            logger.log(LogStatus.FAIL, "", image);
+        } catch (Exception e) {
+            logger.log(LogStatus.FAIL, "Error Occured while taking SCREENSHOT!!!");
+            e.printStackTrace();
+        }
+    }//end of getScreenshot method
+
+    public static void compareExpectedAndActualText(String expectedText, String actualText, ExtentTest logger) {
+        if (actualText.equals(expectedText)) {
+            logger.log(LogStatus.PASS, "Expected Text: " + expectedText + " and Actual Text: " + actualText + " match");
+        }
+        else{
+            logger.log(LogStatus.FAIL, "Expected Text: " + expectedText + " and Actual Text: " + actualText + " does not match");
+        }
+    }//end of compareExpectedAndActualText
+
+}//end of class
Index: src/test/java/Day12_110622/T2_GoogleSearch_ReusableAnnotations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day12_110622/T2_GoogleSearch_ReusableAnnotations.java b/src/test/java/Day12_110622/T2_GoogleSearch_ReusableAnnotations.java
new file mode 100644
--- /dev/null	(date 1667755773691)
+++ b/src/test/java/Day12_110622/T2_GoogleSearch_ReusableAnnotations.java	(date 1667755773691)
@@ -0,0 +1,29 @@
+package Day12_110622;
+
+import ReusableLibrary.ReusableActions;
+import ReusableLibrary.Reusable_Actions_Logger;
+import ReusableLibrary.Reusable_Annotations;
+import com.relevantcodes.extentreports.LogStatus;
+import org.testng.annotations.Test;
+
+public class T2_GoogleSearch_ReusableAnnotations extends Reusable_Annotations {
+
+    @Test
+    public void searchForBmw(){
+        driver.navigate().to("https://www.google.com");
+        //search for bmw on the search field
+        Reusable_Actions_Logger.sendKeysAction(driver,"//*[@name = 'q']", "BMW", logger, "Search Field");
+        //hit submit on google search button
+        Reusable_Actions_Logger.submitAction(driver,"//*[@name='btnK']",logger,"Google Search");
+    }//end of test 1
+
+    @Test(dependsOnMethods = "searchForBmw")
+    public void captureSearchNumber(){
+        //capture the search results text
+        String results = Reusable_Actions_Logger.getTextAction(driver,"//*[@id='result-stats']",logger,"Search Results");
+        String[] arrayResult = results.split(" ");
+        //print back to html report by using log INFO
+        logger.log(LogStatus.INFO,"Search number for BMW is " + arrayResult[1]);
+    }//end of test 2
+
+}//end of class
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1668269010808)
+++ b/.idea/compiler.xml	(date 1668269010808)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="Maven_Automation_Project_2" />
+      </profile>
+    </annotationProcessing>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/ReusableLibrary/ReusableActions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ReusableLibrary/ReusableActions.java b/src/main/java/ReusableLibrary/ReusableActions.java
new file mode 100644
--- /dev/null	(date 1667541167973)
+++ b/src/main/java/ReusableLibrary/ReusableActions.java	(date 1667541167973)
@@ -0,0 +1,129 @@
+package ReusableLibrary;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.JavascriptExecutor;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+import org.openqa.selenium.interactions.Actions;
+import org.openqa.selenium.support.ui.ExpectedConditions;
+import org.openqa.selenium.support.ui.Select;
+import org.openqa.selenium.support.ui.WebDriverWait;
+
+import java.util.ArrayList;
+
+public class ReusableActions {
+    //reusable method to define and launch webdriver
+    public static WebDriver setUpDriver() {
+        //define the webdriver manager setup for chromedriver
+        WebDriverManager.chromedriver().setup();
+        //initialize chrome options
+        ChromeOptions options = new ChromeOptions();
+        //add argument to chrome options
+        options.addArguments("start-fullscreen");
+        options.addArguments("Incognito");
+        //for mac use "start-fullscreen"
+        //options.addArguments("start-fullscreen");
+        //if above does not work on mac, then try --kiosk
+        //options.addArguments("--kiosk");
+        //initialize driver with chrome options
+        WebDriver driver = new ChromeDriver(options);
+        return driver;
+    }//end of setup driver method
+
+    public static void clickAction(WebDriver driver, String xpath, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            element.click();
+        } catch (Exception e) {
+            System.out.println("Unable to click on element: " + elementName + " for reason: " + e);
+        }
+    }
+
+    public static void clickActionByIndex(WebDriver driver, String xpath, int index, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        try {
+            wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath(xpath))).get(index).click();
+        } catch (Exception e) {
+            System.out.println("Unable to click on element: " + elementName + " for reason: " + e);
+        }
+    }
+
+    public static void mouseHover(WebDriver driver, String xpath, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        //declare mouse actions
+        Actions actions = new Actions(driver);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            actions.moveToElement(element).perform();
+        } catch (Exception e) {
+            System.out.println("Unable to hover to element: " + elementName + " for reason: " + e);
+        }
+    }
+
+    public static void sendKeysAction(WebDriver driver, String xpath, String userInput, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 20);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            element.sendKeys(userInput);
+        } catch (Exception e) {
+            System.out.println("Unable to send keys to : " + elementName + " for reason: " + e);
+        }
+    }
+
+    public static String getTextAction(WebDriver driver, String xpath, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 20);
+        String textOutput = "";
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            textOutput = element.getText();
+        } catch (Exception e) {
+            System.out.println("Unable to get text for : " + elementName + " for reason: " + e);
+        }
+        return textOutput;
+    }
+    public static void submitAction(WebDriver driver, String xpath, String elementName) {
+        WebDriverWait wait = new WebDriverWait(driver, 10);
+        try {
+            WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(xpath)));
+            element.submit();
+        } catch (Exception e) {
+            System.out.println("Unable to submit on element: " + elementName + " for reason: " + e);
+        }
+
+    }//end of submit action
+
+    public static void selectByText(WebDriver driver, String xpath, String userValue, String elementName){
+       try {
+           WebElement menu = driver.findElement(By.xpath(xpath));
+           Select dropDown = new Select(menu);
+           dropDown.selectByVisibleText(userValue);
+       }catch(Exception e){
+           System.out.println("Unable to select to element " +elementName+ " " +e);
+       }//end of try & catch
+
+
+    }//end of select Text method
+
+    public static String switchTabsByIndex(WebDriver driver, int index){
+            ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());
+            driver.switchTo().window(tabs.get(index));
+         return tabs.get(index);
+
+    }//end of switchToTabByIndex
+
+    public static void scrollByView(WebDriver driver,String xpath, String elementName) {
+        JavascriptExecutor jse = (JavascriptExecutor) driver;
+        WebElement scrollTo = driver.findElement(By.xpath(xpath));
+        jse.executeScript("arguments[0].scrollIntoView(true);", scrollTo);
+        scrollTo.click();
+
+    }//end of scrollByView
+
+}//end of class
+
+
+
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1664636342725)
+++ b/.idea/jarRepositories.xml	(date 1664636342725)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/ReusableLibrary/Reusable_Annotations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ReusableLibrary/Reusable_Annotations.java b/src/main/java/ReusableLibrary/Reusable_Annotations.java
new file mode 100644
--- /dev/null	(date 1667754655509)
+++ b/src/main/java/ReusableLibrary/Reusable_Annotations.java	(date 1667754655509)
@@ -0,0 +1,47 @@
+package ReusableLibrary;
+
+import com.relevantcodes.extentreports.ExtentReports;
+import com.relevantcodes.extentreports.ExtentTest;
+import org.openqa.selenium.WebDriver;
+import org.testng.annotations.AfterMethod;
+import org.testng.annotations.AfterSuite;
+import org.testng.annotations.BeforeMethod;
+import org.testng.annotations.BeforeSuite;
+
+import java.lang.reflect.Method;
+
+public class Reusable_Annotations {
+    /*
+    WebDriver variable needs to get inherited to your test class but in order to do that it must be public stat
+     */
+    public static WebDriver driver;
+    public static ExtentReports reports;
+    public static ExtentTest logger;
+
+    @BeforeSuite
+    public void setTheDriver(){
+        driver = ReusableActions.setUpDriver();
+        //set the report path here
+        reports = new ExtentReports("src/main/java/HTML_Report/Automation_Report.html", true);
+    }//end of beforesuite
+
+    @BeforeMethod
+    public void captureTestName(Method testName){
+        //before every test, this method will be called and take the name of your test
+        //and it will add your test method to the html report
+        logger = reports.startTest(testName.getName());
+    }//end of before method
+
+    @AfterMethod
+    public void endLogger(){
+        reports.endTest(logger);
+    }//end of after method
+
+    @AfterSuite
+    public void quitSession(){
+        driver.quit();
+        //writing back to one html report
+        reports.flush();
+    }//end of aftersuite
+
+}//end of class
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1664636303218)
+++ b/.idea/.gitignore	(date 1664636303218)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: src/test/java/Day12_110622/T3_Updated_YahooScenario_ReusableAnnotations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day12_110622/T3_Updated_YahooScenario_ReusableAnnotations.java b/src/test/java/Day12_110622/T3_Updated_YahooScenario_ReusableAnnotations.java
new file mode 100644
--- /dev/null	(date 1667757819054)
+++ b/src/test/java/Day12_110622/T3_Updated_YahooScenario_ReusableAnnotations.java	(date 1667757819054)
@@ -0,0 +1,32 @@
+package Day12_110622;
+
+import ReusableLibrary.Reusable_Actions_Logger;
+import ReusableLibrary.Reusable_Annotations;
+import com.relevantcodes.extentreports.LogStatus;
+import org.openqa.selenium.By;
+import org.testng.annotations.Test;
+
+public class T3_Updated_YahooScenario_ReusableAnnotations extends Reusable_Annotations {
+    @Test(priority = 1)
+    public void tc001_verifySignedInOptionIsChecked() throws InterruptedException {
+        //first navigate to yahoo homepage
+        driver.navigate().to("https://www.yahoo.com/");
+        //next we need to click on sign in button
+        Reusable_Actions_Logger.clickAction(driver,"//*[@class = '_yb_1933e']",logger,"Sign In");
+        //we need to verify that signed in option is checked
+        boolean isSignInChecked = driver.findElement(By.xpath("//*[@id= 'persistent']")).isSelected();
+        System.out.println("The checkbox check condition is: " + isSignInChecked);
+        logger.log(LogStatus.INFO,"The checkbox check condition is: " + isSignInChecked);
+    }//end of test 1
+
+
+    @Test(dependsOnMethods = "tc001_verifySignedInOptionIsChecked")
+    public void tc002_verifySignedInOptionIsUnChecked() {
+        //click on check box to uncheck it
+        Reusable_Actions_Logger.clickAction(driver,"//*[@class= 'stay-signed-in checkbox-container']",logger,"Check Box Unchecked");
+        //we need to verify that signed in option is checked
+        boolean isSignInChecked = driver.findElement(By.xpath("//*[@id= 'persistent']")).isSelected();
+        System.out.println("The checkbox check condition is: " + isSignInChecked);
+        logger.log(LogStatus.INFO,"The checkbox check condition is: " + isSignInChecked);
+    }//end of test 2
+}//end of class
Index: src/test/java/Day1_100122/Main_PrintStatement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day1_100122/Main_PrintStatement.java b/src/test/java/Day1_100122/Main_PrintStatement.java
new file mode 100644
--- /dev/null	(date 1664637128739)
+++ b/src/test/java/Day1_100122/Main_PrintStatement.java	(date 1664637128739)
@@ -0,0 +1,12 @@
+package Day1_100122;
+
+public class Main_PrintStatement {
+
+    //Main method will go
+    public static void main(String[] args){
+
+        //My print statement will be placed. Every statement must end with a semicolon
+        System.out.println("Welcome to Day 1 of automation class");
+
+    }//end of main method
+}//end of java class
Index: src/test/java/Day12_110622/T3_YahooScenario_ReusableAnnotations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day12_110622/T3_YahooScenario_ReusableAnnotations.java b/src/test/java/Day12_110622/T3_YahooScenario_ReusableAnnotations.java
new file mode 100644
--- /dev/null	(date 1667756740625)
+++ b/src/test/java/Day12_110622/T3_YahooScenario_ReusableAnnotations.java	(date 1667756740625)
@@ -0,0 +1,7 @@
+package Day12_110622;
+
+public class T3_YahooScenario_ReusableAnnotations {
+
+
+}//end of class
+
Index: src/test/java/Day1_100122/Day1Class.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day1_100122/Day1Class.java b/src/test/java/Day1_100122/Day1Class.java
new file mode 100644
--- /dev/null	(date 1664636821109)
+++ b/src/test/java/Day1_100122/Day1Class.java	(date 1664636821109)
@@ -0,0 +1,4 @@
+package Day1_100122;
+
+public class Day1Class {
+}
Index: src/test/java/Day12_110622/AutomationTestSuite.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day12_110622/AutomationTestSuite.xml b/src/test/java/Day12_110622/AutomationTestSuite.xml
new file mode 100644
--- /dev/null	(date 1667758953992)
+++ b/src/test/java/Day12_110622/AutomationTestSuite.xml	(date 1667758953992)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
+<suite name="AutomationTestSuite">
+    <test name="Google And Yahoo Scenarios" preserve-order="true">
+        <classes>
+            <class name="Day12_110622.T3_Updated_YahooScenario_ReusableAnnotations" />
+        </classes>
+    </test> <!-- Test -->
+</suite> <!-- Suite -->
\ No newline at end of file
Index: src/test/java/Day1_100122/DataType_Concat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day1_100122/DataType_Concat.java b/src/test/java/Day1_100122/DataType_Concat.java
new file mode 100644
--- /dev/null	(date 1664642513855)
+++ b/src/test/java/Day1_100122/DataType_Concat.java	(date 1664642513855)
@@ -0,0 +1,15 @@
+package Day1_100122;
+
+public class DataType_Concat {
+
+    public static void main(String[] args) {
+        //declare and define a string variable
+        String myString = "Welcome to automation class";
+
+        //declare and define a int variable
+        int myNumber= 101;
+
+        //print both variables into one print statement
+        System.out.println("My message is " + myString + " " + myNumber);
+    }//end of main
+}//end of java
Index: src/test/java/Day2_100222/T1_LinearArray.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day2_100222/T1_LinearArray.java b/src/test/java/Day2_100222/T1_LinearArray.java
new file mode 100644
--- /dev/null	(date 1664722236556)
+++ b/src/test/java/Day2_100222/T1_LinearArray.java	(date 1664722236556)
@@ -0,0 +1,19 @@
+package Day2_100222;
+
+import java.sql.SQLOutput;
+
+public class T1_LinearArray {
+    public static void main(String[] args) {
+
+        //declare a String array variable
+        String[] zipCode, streetNumber;
+        //defining zipcode values for the linear string array
+        zipCode = new String[]{"11218", "11222","10001","11377"};
+        //define streetNumber values for the linear string array
+        streetNumber = new String[]{"111","222","333", "444", "555"};
+        //print a value from zipcode. Array always starts from 0 index
+        System.out.println("zip code: "+ zipCode[3] + " " + zipCode[2]);
+        System.out.println("Street Number is " +streetNumber[2]);
+        System.out.println("zip code: " + zipCode[1] + " " + zipCode[0] + " " + "and Street Number is:" + " " + streetNumber[0]);
+    }//end of main
+}//end of java class
Index: src/main/java/HTML_Report/Automation_Report.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/HTML_Report/Automation_Report.html b/src/main/java/HTML_Report/Automation_Report.html
new file mode 100644
--- /dev/null	(date 1668271605893)
+++ b/src/main/java/HTML_Report/Automation_Report.html	(date 1668271605893)
@@ -0,0 +1,424 @@
+
+<!DOCTYPE html>
+<html>
+	<head>
+		<!--
+			ExtentReports Library 2.41.1 | http://relevantcodes.com/extentreports-for-selenium/ | https://github.com/anshooarora/
+			Copyright (c) 2015, Anshoo Arora (Relevant Codes) | Copyrights licensed under the New BSD License | http://opensource.org/licenses/BSD-3-Clause
+			Documentation: http://extentreports.relevantcodes.com 
+		-->
+
+		<meta charset='UTF-8' /> 
+		<meta name='description' content='ExtentReports (by Anshoo Arora) is a reporting library for automation testing for .NET and Java. It creates detailed and beautiful HTML reports for modern browsers. ExtentReports shows test and step summary along with dashboards, system and environment details for quick analysis of your tests.' />
+		<meta name='robots' content='noodp, noydir' />
+		<meta name='viewport' content='width=device-width, initial-scale=1' />
+		<meta name='extentx' id='extentx' content='' />
+		
+		<title>
+				ExtentReports 2.0
+		</title>
+		
+		
+		<link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600' rel='stylesheet' type='text/css'>
+		<link href='https://cdn.rawgit.com/anshooarora/extentreports/6032d73243ba4fe4fb8769eb9c315d4fdf16fe68/cdn/extent.css' type='text/css' rel='stylesheet' />
+		
+		<style>
+				
+            
+                
+            
+        
+		</style>
+	</head>
+	
+	
+	<body class='extent default standard hide-overflow'>
+		<!-- nav -->
+		<nav>
+			<div class='logo-container blue darken-2'>
+				<a class='logo-content' href='http://extentreports.relevantcodes.com'>
+					<span>ExtentReports</span>
+				</a>
+				<a href='#' data-activates='slide-out' class='button-collapse hide-on-large-only'><i class='mdi-navigation-apps'></i></a>
+			</div>
+			<ul id='slide-out' class='side-nav fixed hide-on-med-and-down'>
+				<li class='analysis waves-effect active'><a href='#!' class='test-view' onclick="_updateCurrentStage(0)"><i class='mdi-action-dashboard'></i>Test Details</a></li>
+				<li class='analysis waves-effect'>
+					<a href='#!' onclick="_updateCurrentStage(-1)" class='dashboard-view'><i class='mdi-action-track-changes'></i></i>Analysis</a>
+				</li>
+			</ul>
+			<span class='report-name'>Automation Report</span> <span class='report-headline'></span>
+			<ul class='right hide-on-med-and-down nav-right'>
+				<li class='theme-selector' alt='Click to toggle dark theme. To enable by default, use js configuration $("body").addClass("dark");' title='Click to toggle dark theme. To enable by default, use js configuration $("body").addClass("dark");'>
+					<i class='mdi-hardware-desktop-windows'></i>
+				</li>
+				<li>
+					<span class='suite-started-time'>2022-11-12 11:46:45</span>
+				</li>
+				<li>
+					<span>v2.41.1</span>
+				</li>
+			</ul>
+		</nav>
+		<!-- /nav -->
+		
+		<!-- container -->
+		<div class='container'>
+			
+			<!-- dashboard -->
+			<div id='dashboard-view' class='row'>
+				<div class='time-totals'>
+					<div class='col l2 m4 s6'>
+						<div class='card suite-total-tests'> 
+							<span class='panel-name'>Total Tests</span> 
+							<span class='total-tests'> <span class='panel-lead'></span> </span> 
+						</div> 
+					</div>
+					<div class='col l2 m4 s6'>
+						<div class='card suite-total-steps'> 
+							<span class='panel-name'>Total Steps</span> 
+							<span class='total-steps'> <span class='panel-lead'></span> </span> 
+						</div> 
+					</div>
+					<div class='col l2 m4 s12'>
+						<div class='card suite-total-time-current'> 
+							<span class='panel-name'>Total Time Taken (Current Run)</span> 
+							<span class='suite-total-time-current-value panel-lead'>0h 0m 7s+489ms</span> 
+						</div> 
+					</div>
+					<div class='col l2 m4 s12'>
+						<div class='card suite-total-time-overall'> 
+							<span class='panel-name'>Total Time Taken (Overall)</span> 
+							<span class='suite-total-time-overall-value panel-lead'>0h 0m 7s+489ms</span> 
+						</div> 
+					</div>
+					<div class='col l2 m4 s6 suite-start-time'>
+						<div class='card accent green-accent'> 
+							<span class='panel-name'>Start</span> 
+							<span class='panel-lead suite-started-time'>2022-11-12 11:46:38</span> 
+						</div> 
+					</div>
+					<div class='col l2 m4 s6 suite-end-time'>
+						<div class='card accent pink-accent'> 
+							<span class='panel-name'>End</span> 
+							<span class='panel-lead suite-ended-time'>2022-11-12 11:46:45</span> 
+						</div> 
+					</div>
+				</div>
+				<div class='charts'>
+					<div class='col s12 m6 l4 fh'> 
+						<div class='card-panel'> 
+							<div>
+								<span class='panel-name'>Tests View</span>
+							</div> 
+							<div class='panel-setting modal-trigger test-count-setting right'>
+								<a href='#test-count-setting'><i class='mdi-navigation-more-vert text-md'></i></a>
+							</div> 
+							<div class='chart-box'>
+								<canvas class='text-centered' id='test-analysis'></canvas>
+							</div> 
+							<div>
+								<span class='weight-light'><span class='t-pass-count weight-normal'></span> test(s) passed</span>
+							</div> 
+							<div>
+								<span class='weight-light'><span class='t-fail-count weight-normal'></span> test(s) failed, <span class='t-others-count weight-normal'></span> others</span>
+							</div> 
+						</div> 
+					</div> 
+					<div class='col s12 m6 l4 fh'> 
+						<div class='card-panel'> 
+							<div>
+								<span class='panel-name'>Steps View</span>
+							</div> 
+							<div class='panel-setting modal-trigger step-status-filter right'>
+								<a href='#step-status-filter'><i class='mdi-navigation-more-vert text-md'></i></a>
+							</div> 
+							<div class='chart-box'>
+								<canvas class='text-centered' id='step-analysis'></canvas>
+							</div> 
+							<div>
+								<span class='weight-light'><span class='s-pass-count weight-normal'></span> step(s) passed </span>
+							</div> 
+							<div>
+								<span class='weight-light'><span class='s-fail-count weight-normal'></span> step(s) failed, <span class='s-others-count weight-normal'></span> others</span>
+							</div> 
+						</div> 
+					</div>
+					<div class='col s12 m12 l4 fh'> 
+						<div class='card-panel'> 
+							<span class='panel-name'>Pass Percentage</span> 
+							<span class='pass-percentage panel-lead'></span> 
+							<div class='progress light-blue lighten-3'> 
+								<div class='determinate light-blue'></div> 
+							</div> 
+						</div> 
+					</div>
+				</div>
+				<div class='system-view'>
+					<div class='col l4 m12 s12'>
+						<div class='card-panel'>
+							<span class='label info outline right'>Environment</span>
+							<table>
+								<thead>
+									<tr>
+										<th>Param</th>
+										<th>Value</th>
+									</tr>
+								</thead>
+								<tbody>
+										<tr>
+											<td>User Name</td>
+											<td>hunzabutool</td>
+										</tr>
+										<tr>
+											<td>OS</td>
+											<td>Mac OS X</td>
+										</tr>
+										<tr>
+											<td>Java Version</td>
+											<td>19</td>
+										</tr>
+										<tr>
+											<td>Host Name</td>
+											<td>Hunzas-MBP.lan</td>
+										</tr>
+								</tbody>
+							</table>
+						</div>
+					</div>
+				</div>
+			</div>
+			<!-- /dashboard -->
+			
+			<!-- tests -->
+			<div id='test-view' class='row _addedTable'>
+				<div class='col _addedCell1'>
+					<div class='contents'>
+						<div class='card-panel heading'>
+							<h5>Tests</h5>
+						</div>
+						<div class='card-panel filters'>
+							<div>
+								<a class='dropdown-button btn-floating btn-small waves-effect waves-light grey tests-toggle' data-activates='tests-toggle' data-constrainwidth='true' data-beloworigin='true' data-hover='true' href='#'>
+									<i class='mdi-action-reorder'></i>
+								</a>
+								<ul id='tests-toggle' class='dropdown-content'>
+									<li class='pass'><a href='#!'>Pass</a></li>
+									<li class='fail'><a href='#!'>Fail</a></li>
+									<li class='skip'><a href='#!'>Skip</a></li>
+									<li class='divider'></li>
+									<li class='clear'><a href='#!'>Clear Filters</a></li>
+								</ul>
+							</div>
+							<div>
+								<a class='btn-floating btn-small waves-effect waves-light grey' id='clear-filters' alt='Clear Filters' title='Clear Filters'>
+									<i class='mdi-navigation-close'></i>
+								</a>
+							</div>
+							<div>
+								<a class='btn-floating btn-small waves-effect waves-light grey' id='enableDashboard' alt='Enable Dashboard' title='Enable Dashboard'>
+									<i class='mdi-action-track-changes'></i>
+								</a>
+							</div>
+							<div>
+								<a class='btn-floating btn-small waves-effect waves-light blue enabled' id='refreshCharts' alt='Refresh Charts on Filters' title='Refresh Charts on Filters'>
+									<i class='mdi-navigation-refresh'></i>
+								</a>
+							</div>
+							<div class='search' alt='Search Tests' title='Search Tests'>
+								<div class='input-field left'>
+									<input id='searchTests' type='text' class='validate' placeholder='Search Tests...'>
+								</div>
+								<a href="#" class='btn-floating btn-small waves-effect waves-light grey'>
+									<i class='mdi-action-search'></i>
+								</a>
+							</div>
+						</div>
+						<div class='card-panel no-padding-h no-padding-v no-margin-v'>
+							<div class='wrapper'>
+								<ul id='test-collection' class='test-collection'>
+										<li class='collection-item test displayed active fail ' extentid='6a6057be-0697-425f-9ce3-f2b9adbc5555'>
+											<div class='test-head'>
+												<span class='test-name'>tc001_verifyYahooPageTitle </span>
+												<span class='test-status label right outline capitalize fail'>fail</span>
+												<span class='category-assigned hide '></span>
+											</div>
+											<div class='test-body'>
+												<div class='test-info'>
+													<span title='Test started time' alt='Test started time' class='test-started-time label green lighten-1 text-white'>2022-11-12 11:46:38</span>
+													<span title='Test ended time' alt='Test ended time' class='test-ended-time label red lighten-1 text-white'>2022-11-12 11:46:41</span>
+													<span title='Time taken to finish' alt='Time taken to finish' class='test-time-taken label blue-grey lighten-3 text-white'>0h 0m 3s+197ms</span>
+												</div>
+												<div class='test-desc'></div>
+												<div class='test-attributes'>
+												</div>
+												<div class='test-steps'>
+													<table class='bordered table-results'>
+														<thead>
+															<tr>
+																<th>Status</th>
+																<th>Timestamp</th>
+																<th>Details</th>
+															</tr>
+														</thead>
+														<tbody>
+																<tr>
+																	<td class='status fail' title='fail' alt='fail'><i class='mdi-navigation-cancel'></i></td>
+																	<td class='timestamp'>11:46:41</td>
+																	<td class='step-details'>Expected Result does not match Actual Result</td>
+																</tr>
+														</tbody>
+													</table>
+													<ul class='collapsible node-list' data-collapsible='accordion'>
+													</ul>
+												</div>
+											</div>
+										</li>
+										<li class='collection-item test displayed active fail ' extentid='e9db5bd1-f279-41e2-928b-db9406e2c33a'>
+											<div class='test-head'>
+												<span class='test-name'>tc002_verifyYahooSignInText </span>
+												<span class='test-status label right outline capitalize fail'>fail</span>
+												<span class='category-assigned hide '></span>
+											</div>
+											<div class='test-body'>
+												<div class='test-info'>
+													<span title='Test started time' alt='Test started time' class='test-started-time label green lighten-1 text-white'>2022-11-12 11:46:41</span>
+													<span title='Test ended time' alt='Test ended time' class='test-ended-time label red lighten-1 text-white'>2022-11-12 11:46:45</span>
+													<span title='Time taken to finish' alt='Time taken to finish' class='test-time-taken label blue-grey lighten-3 text-white'>0h 0m 3s+448ms</span>
+												</div>
+												<div class='test-desc'></div>
+												<div class='test-attributes'>
+												</div>
+												<div class='test-steps'>
+													<table class='bordered table-results'>
+														<thead>
+															<tr>
+																<th>Status</th>
+																<th>Timestamp</th>
+																<th>Details</th>
+															</tr>
+														</thead>
+														<tbody>
+																<tr>
+																	<td class='status pass' title='pass' alt='pass'><i class='mdi-action-check-circle'></i></td>
+																	<td class='timestamp'>11:46:45</td>
+																	<td class='step-details'>Successfully capture a text on Sign In</td>
+																</tr>
+																<tr>
+																	<td class='status fail' title='fail' alt='fail'><i class='mdi-navigation-cancel'></i></td>
+																	<td class='timestamp'>11:46:45</td>
+																	<td class='step-details'>Expected Text: Sign In and Actual Text: Sign in does not match</td>
+																</tr>
+														</tbody>
+													</table>
+													<ul class='collapsible node-list' data-collapsible='accordion'>
+													</ul>
+												</div>
+											</div>
+										</li>
+								</ul>
+							</div>
+						</div>
+					</div>
+				</div>
+				<div id='test-details-wrapper' class='col _addedCell2'>
+					<div class='contents'>
+						<div class='card-panel details-view'>
+							<h5 class='details-name'></h5>
+							<div class='step-filters right'>
+								<span class='btn-floating btn-small waves-effect waves-light blue' status='info' alt='info' title='info'><i class='mdi-action-info-outline'></i></span>
+								<span class='btn-floating btn-small waves-effect waves-light green' status='pass' alt='pass' title='pass'><i class='mdi-action-check-circle'></i></span>
+								<span class='btn-floating btn-small waves-effect waves-light red' status='fail' alt='fail' title='fail'><i class='mdi-navigation-cancel'></i></span>
+								<span class='btn-floating btn-small waves-effect waves-light red darken-4' status='fatal' alt='fatal' title='fatal'><i class='mdi-navigation-cancel'></i></span>
+								<span class='btn-floating btn-small waves-effect waves-light red lighten-2' status='error' alt='error' title='error'><i class='mdi-alert-error'></i></span>
+								<span class='btn-floating btn-small waves-effect waves-light orange' alt='warning' status='warning' title='warning'><i class='mdi-alert-warning'></i></span>
+								<span class='btn-floating btn-small waves-effect waves-light cyan' status='skip' alt='skip' title='skip'><i class='mdi-content-redo'></i></span>
+								<span class='btn-floating btn-small waves-effect waves-light grey darken-2' status='clear-step-filter' alt='Clear filters' title='Clear filters'><i class='mdi-content-clear'></i></span>
+							</div>
+							<div class='details-container'>
+							</div>
+						</div>
+					</div>
+				</div>
+			</div>
+			<!-- /tests -->
+			
+			<!-- categories -->
+			<!-- /categories -->
+			
+			<!-- exceptions -->
+			<!-- /exceptions -->
+			
+			<!-- testrunner logs -->
+			<!-- /testrunner logs -->
+			
+		</div>
+		<!-- /container -->
+		
+		<!-- test dashboard counts setting -->
+		<div id='test-count-setting' class='modal bottom-sheet'> 
+			<div class='modal-content'> 
+				<h5>Configure Tests Count Setting</h5> 
+				<input name='test-count-setting' type='radio' id='parentWithoutNodes' class='with-gap'> 
+				<label for='parentWithoutNodes'>Parent Tests Only (Does not include child nodes in counts)</label> 
+				<br> 
+				<input name='test-count-setting' type='radio' id='parentWithoutNodesAndNodes' class='with-gap'> 
+				<label for='parentWithoutNodesAndNodes'>Parent Tests Without Child Tests + Child Tests</label> 
+				<br> 
+				<input name='test-count-setting' type='radio' id='childNodes' class='with-gap'> 
+				<label for='childNodes'>Child Tests Only</label> 
+			</div> 
+			<div class='modal-footer'> 
+				<a href='#!' class='modal-action modal-close waves-effect waves-green btn'>Save</a> 
+			</div> 
+		</div>
+		<!-- /test dashboard counts setting -->
+		
+		<!-- filter for step status -->
+		<div id='step-status-filter' class='modal bottom-sheet'> 
+			<div class='modal-content'> 
+				<h5>Select status</h5> 
+				<input checked class='filled-in' type='checkbox' id='step-dashboard-filter-pass'> 
+				<label for='step-dashboard-filter-pass'>Pass</label> 
+				<br> 
+				<input checked class='filled-in' type='checkbox' id='step-dashboard-filter-fail'> 
+				<label for='step-dashboard-filter-fail'>Fail</label> 
+				<br> 
+				<input checked class='filled-in' type='checkbox' id='step-dashboard-filter-fatal'> 
+				<label for='step-dashboard-filter-fatal'>Fatal</label> 
+				<br> 
+				<input checked class='filled-in' type='checkbox' id='step-dashboard-filter-error'> 
+				<label for='step-dashboard-filter-error'>Error</label> 
+				<br> 
+				<input checked class='filled-in' type='checkbox' id='step-dashboard-filter-warning'> 
+				<label for='step-dashboard-filter-warning'>Warning</label> 
+				<br> 
+				<input checked class='filled-in' type='checkbox' id='step-dashboard-filter-skip'> 
+				<label for='step-dashboard-filter-skip'>Skipped</label> 
+				<br> 
+				<input checked class='filled-in' type='checkbox' id='step-dashboard-filter-info'> 
+				<label for='step-dashboard-filter-info'>Info</label> 
+				<br> 
+				<input checked class='filled-in' type='checkbox' id='step-dashboard-filter-unknown'> 
+				<label for='step-dashboard-filter-unknown'>Unknown</label> 
+			</div>
+			<div class='modal-footer'> 
+				<a href='#!' class='modal-action modal-close waves-effect waves-green btn'>Save</a> 
+			</div> 
+		</div>
+		<!-- /filter for step status -->
+		
+		<script src='https://cdn.rawgit.com/anshooarora/extentreports/6032d73243ba4fe4fb8769eb9c315d4fdf16fe68/cdn/extent.js' type='text/javascript'></script>
+
+		<script>$(document).ready(function() { $('.logo span').html('ExtentReports'); });</script>
+		<script>
+				
+            
+                $(document).ready(function() {
+                    
+                });
+            
+        
+		</script>
+	</body>
+</html>
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1664641526036)
+++ b/.idea/uiDesigner.xml	(date 1664641526036)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/test/java/Day4_100922/T1_SplitCommand.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day4_100922/T1_SplitCommand.java b/src/test/java/Day4_100922/T1_SplitCommand.java
new file mode 100644
--- /dev/null	(date 1665624082894)
+++ b/src/test/java/Day4_100922/T1_SplitCommand.java	(date 1665624082894)
@@ -0,0 +1,19 @@
+package Day4_100922;
+
+public class T1_SplitCommand {
+    public static void main(String[] args) {
+
+        //declare a string variable
+        String message = "My name is John";
+        //extract out John from the string and print it
+        //call split message by using String array
+        String[] splitMessage = message.split(" ");
+        System.out.println("result: " + splitMessage[3]);
+
+        //extracting each character from a string
+        String message2 = "abc";
+        String[] splitMessage2 = message2.split("");
+        System.out.println("Index 2 is: " + splitMessage2[1]);
+
+    }//end of main
+}//end of java
Index: src/test/java/Day2_100222/T2_ArrayList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day2_100222/T2_ArrayList.java b/src/test/java/Day2_100222/T2_ArrayList.java
new file mode 100644
--- /dev/null	(date 1664723779585)
+++ b/src/test/java/Day2_100222/T2_ArrayList.java	(date 1664723779585)
@@ -0,0 +1,27 @@
+package Day2_100222;
+
+import java.util.ArrayList;
+
+public class T2_ArrayList {
+    public static void main(String[] args) {
+
+        //declare and define an arrayList of countries
+        ArrayList<String> countries = new ArrayList<>();
+        countries.add("USA");
+        countries.add("Pakistan");
+        countries.add("Turkey");
+        countries.add("UAE");
+
+        //print usa from the countries list
+        System.out.println("Countries value: " + countries.get(0));
+        //get me all the count of the countries list
+        System.out.println("Countries count: " + countries.size());
+
+        //call an integer array list for streetNumber
+        ArrayList<Integer> streetNumber = new ArrayList<>();
+        streetNumber.add(222);
+        streetNumber.add(333);
+        System.out.println("First Street Number: " + streetNumber.get(0));
+
+    }//end of main method
+}//end of java class
Index: src/test/java/Review_Session/Exercise2_12OCT.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Review_Session/Exercise2_12OCT.java b/src/test/java/Review_Session/Exercise2_12OCT.java
new file mode 100644
--- /dev/null	(date 1665622397593)
+++ b/src/test/java/Review_Session/Exercise2_12OCT.java	(date 1665622397593)
@@ -0,0 +1,22 @@
+package Review_Session;
+
+import java.util.ArrayList;
+
+public class Exercise2_12OCT {
+    public static void main(String[] args) {
+        ArrayList<String> countries = new ArrayList<>();
+        countries.add("USA");
+        countries.add("Mexico");
+        countries.add("Canada");
+
+        if(countries.get(0).equals("USA") &&countries.get(1).equals("Canada")) {
+            System.out.println("Option 1");
+
+        } else if (countries.get(0).equals("USA") || countries.get(1).equals("Canada")){
+            System.out.println("Option 2");
+        }//end of conditions
+    }//end of main
+}//end of java
+
+
+
Index: src/test/java/Day4_100922/T2_WebDriverExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day4_100922/T2_WebDriverExample.java b/src/test/java/Day4_100922/T2_WebDriverExample.java
new file mode 100644
--- /dev/null	(date 1665328503650)
+++ b/src/test/java/Day4_100922/T2_WebDriverExample.java	(date 1665328503650)
@@ -0,0 +1,22 @@
+package Day4_100922;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.chrome.ChromeDriver;
+
+public class T2_WebDriverExample {
+    public static void main(String[] args) throws InterruptedException {
+        //define the web driver manager setup for chromedriver
+        WebDriverManager.chromedriver().setup();
+        //define the chrome driver to use for your test
+        //creating an instance for a chrome driver(browser) to use for automation
+        WebDriver driver = new ChromeDriver();
+        //navigate to the google site
+        driver.navigate().to("https://www.google.com");
+        //wait for a few seconds
+        Thread.sleep(3000);
+        //quit the chrome session
+        driver.quit();
+    }//end of main
+}//end of java
+
Index: src/test/java/Day13_111222/T2_StringComparison.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day13_111222/T2_StringComparison.java b/src/test/java/Day13_111222/T2_StringComparison.java
new file mode 100644
--- /dev/null	(date 1668271592677)
+++ b/src/test/java/Day13_111222/T2_StringComparison.java	(date 1668271592677)
@@ -0,0 +1,35 @@
+package Day13_111222;
+
+import ReusableLibrary.Reusable_Actions_Logger;
+import ReusableLibrary.Reusable_Annotations;
+import com.relevantcodes.extentreports.LogStatus;
+import org.testng.annotations.Test;
+
+public class T2_StringComparison extends Reusable_Annotations {
+    @Test(priority = 1)
+    public void tc001_verifyYahooPageTitle() {
+        //first navigate to yahoo homepage
+        driver.navigate().to("https://www.yahoo.com/");
+        //define our expected string variable
+        String expectedTitle = "Yahoo..";
+        //get page title
+        String actualTitle = driver.getTitle();
+        if (actualTitle.equals(expectedTitle)) {
+            logger.log(LogStatus.PASS, "Expected Result matches Actual Result");
+        } else {
+            logger.log(LogStatus.FAIL, "Expected Result does not match Actual Result");
+        }
+    }//end of test 1
+
+    @Test(priority = 2)
+    public void tc002_verifyYahooSignInText() {
+        //first navigate to yahoo homepage
+        driver.navigate().to("https://www.yahoo.com/");
+        //define our expected string variable
+        String actualYahooSignInButtonText = Reusable_Actions_Logger.getTextAction(driver, "//*[@class = '_yb_18vjf']", logger, "Sign In");
+        //define expected string text
+        String expectedYahooSignInButtonText = "Sign In";
+        Reusable_Actions_Logger.compareExpectedAndActualText(expectedYahooSignInButtonText, actualYahooSignInButtonText,logger);
+    }//end of test 2
+}//end of class
+
Index: src/test/java/Review_Session/Exercise1_12OCT.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Review_Session/Exercise1_12OCT.java b/src/test/java/Review_Session/Exercise1_12OCT.java
new file mode 100644
--- /dev/null	(date 1665620194580)
+++ b/src/test/java/Review_Session/Exercise1_12OCT.java	(date 1665620194580)
@@ -0,0 +1,18 @@
+package Review_Session;
+
+public class Exercise1_12OCT {
+    public static void main(String[] args) {
+        int a = 5;
+        int b = 8;
+
+        if (a > b){
+            System.out.println("option 1");
+        }else if (b < a){
+                System.out.println("option 2");
+            }else if (a==b) {
+            System.out.println("option 3");
+        }else if((b-1) >= (a+2)){
+            System.out.println("option 4");
+        }//end of condition
+        }//end of main
+}//end of java
Index: src/test/java/Day2_100222/T3_ForLoop_ArrayList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day2_100222/T3_ForLoop_ArrayList.java b/src/test/java/Day2_100222/T3_ForLoop_ArrayList.java
new file mode 100644
--- /dev/null	(date 1664727814860)
+++ b/src/test/java/Day2_100222/T3_ForLoop_ArrayList.java	(date 1664727814860)
@@ -0,0 +1,24 @@
+package Day2_100222;
+
+import java.util.ArrayList;
+
+public class T3_ForLoop_ArrayList {
+    public static void main(String[] args) {
+        //declare and define the arrayList for zip code
+        ArrayList<String> zipCode = new ArrayList<>();
+        zipCode.add("11218");
+        zipCode.add("10001");
+        zipCode.add("11219");
+        zipCode.add("11377");
+        zipCode.add("11435");
+        zipCode.add("11367");
+
+        //call for loop to print out all zip code values from the array list
+        //if you want to control the end point by number, then put actual number instead of zipcode.size()
+        //for(int i =0; i <4; i++){
+        for(int i =0; i < zipCode.size(); i++){
+            //print out each zip code automatically
+            System.out.println("Zip code: " + zipCode.get(i));
+        }//end of loop
+    }//end of main
+}//end of java class
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	(date 1667747452222)
+++ b/pom.xml	(date 1667747452222)
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>org.example</groupId>
+    <artifactId>Maven_Automation_Project_2</artifactId>
+    <version>1.0-SNAPSHOT</version>
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>17</source>
+                    <target>17</target>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+    <properties>
+        <maven.compiler.source>19</maven.compiler.source>
+        <maven.compiler.target>19</maven.compiler.target>
+    </properties>
+    <dependencies>
+        <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
+        <dependency>
+            <groupId>org.seleniumhq.selenium</groupId>
+            <artifactId>selenium-java</artifactId>
+            <version>3.141.59</version>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager -->
+        <dependency>
+            <groupId>io.github.bonigarcia</groupId>
+            <artifactId>webdrivermanager</artifactId>
+            <version>5.3.0</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.testng</groupId>
+            <artifactId>testng</artifactId>
+            <version>7.6.1</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.testng</groupId>
+            <artifactId>testng</artifactId>
+            <version>7.6.0</version>
+            <scope>compile</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>com.relevantcodes</groupId>
+            <artifactId>extentreports</artifactId>
+            <version>2.41.2</version>
+        </dependency>
+
+
+    </dependencies>
+
+</project>
\ No newline at end of file
Index: src/test/java/Day4_100922/T4_GoogleSearch_DataDrivenTesting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day4_100922/T4_GoogleSearch_DataDrivenTesting.java b/src/test/java/Day4_100922/T4_GoogleSearch_DataDrivenTesting.java
new file mode 100644
--- /dev/null	(date 1665338288298)
+++ b/src/test/java/Day4_100922/T4_GoogleSearch_DataDrivenTesting.java	(date 1665338288298)
@@ -0,0 +1,59 @@
+package Day4_100922;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.chrome.ChromeDriver;
+
+import java.util.ArrayList;
+
+public class T4_GoogleSearch_DataDrivenTesting {
+    public static void main(String[] args) throws InterruptedException {
+        //ArrayList for cars
+        ArrayList<String> cars = new ArrayList<>();
+        cars.add("BMW");
+        cars.add("Audi");
+        cars.add("Mercedes");
+
+
+        //define the web driver manager setup for chromedriver
+        WebDriverManager.chromedriver().setup();
+        //define the chrome driver to use for your test
+        //creating an instance for a chrome driver(browser) to use for automation
+        WebDriver driver = new ChromeDriver();
+
+
+        for (int i = 0; i < cars.size(); i++) {
+
+            //navigate to the google site
+            driver.navigate().to("https://www.google.com");
+
+            //maximize my window
+            //for windows
+            //driver.manage().window().maximize();
+            //for mac
+            driver.manage().window().fullscreen();
+            //sleep statement
+            Thread.sleep(3000);
+
+            //search a keyword on the search field
+            //relative xpath to locate the element
+            driver.findElement(By.xpath("//*[@name='q']")).sendKeys(cars.get(i));
+            //hit submit on the google search button
+            driver.findElement(By.xpath("//*[@name='btnK']")).submit();
+
+            //sleep statement
+            Thread.sleep(3000);
+
+            //capture the search result text
+            String result = driver.findElement(By.xpath("//*[@id='result-stats']")).getText();
+            //split message to extract out the search number
+            String[] splitResult = result.split(" ");
+            System.out.println("the search number for " + cars.get(i) + " is " + splitResult[1]);
+
+        }//end of for loop
+
+        //quit the driver to end the session
+        driver.quit();
+        }//end of main
+    }//end of class
Index: src/test/java/Day4_100922/T3_GoogleSearch.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day4_100922/T3_GoogleSearch.java b/src/test/java/Day4_100922/T3_GoogleSearch.java
new file mode 100644
--- /dev/null	(date 1665625839584)
+++ b/src/test/java/Day4_100922/T3_GoogleSearch.java	(date 1665625839584)
@@ -0,0 +1,41 @@
+package Day4_100922;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.chrome.ChromeDriver;
+
+public class T3_GoogleSearch {
+    public static void main(String[] args) throws InterruptedException {
+        //define the web driver manager setup for chrome driver
+        WebDriverManager.chromedriver().setup();
+        //define the chrome driver to use for your test
+        //creating an instance for a chrome driver(browser)
+        WebDriver driver = new ChromeDriver();
+        //navigate to the google site
+        driver.navigate().to("https://www.google.com");
+        //maximize the window
+        //driver.manage().window().maximize();
+        driver.manage().window().fullscreen();
+        //sleep statement
+        Thread.sleep(3000);
+        //search a keyword on the search field
+        //relative xpath to locate the element
+        driver.findElement(By.xpath("//*[@name='q']")).sendKeys("Cars");
+        /*this is an example of relative xpath
+        driver.findElement(By.xpath("//*[@name = 'q']")).sendKeys("cars");
+        //this is an example of absolute xpath
+        driver.findElement(By.xpath("//div[@class = 'RNNXgb']//div//div//input")).sendKeys("cars");*/
+        //hit submit on the google search button
+        driver.findElement(By.xpath("//*[@name='btnK']")).submit();
+        Thread.sleep(3000);
+
+        //capture the text
+        String result = driver.findElement(By.xpath("//*[@id='result-stats']")).getText();
+        //split the message to extract out the search number
+        String[] splitResult = result.split(" ");
+        System.out.println("the search number is for " + splitResult[1]);
+
+        driver.quit();
+    }//end of main
+}//end of java
Index: src/test/java/ActionItems/ActionItem_2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ActionItems/ActionItem_2.java b/src/test/java/ActionItems/ActionItem_2.java
new file mode 100644
--- /dev/null	(date 1665710159862)
+++ b/src/test/java/ActionItems/ActionItem_2.java	(date 1665710159862)
@@ -0,0 +1,56 @@
+package ActionItems;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.chrome.ChromeDriver;
+
+import java.nio.charset.StandardCharsets;
+import java.util.ArrayList;
+
+public class ActionItem_2 {
+    public static void main(String[] args) throws InterruptedException {
+        ArrayList<String> hobbies = new ArrayList<>();
+        hobbies.add("skating");
+        hobbies.add("walking");
+        hobbies.add("knitting");
+        hobbies.add("jumping");
+
+        //Define Webdriver Manager to Chrome driver setup
+        WebDriverManager.chromedriver().setup();
+        WebDriver driver = new ChromeDriver();
+
+        //sleep statement
+        Thread.sleep(3000);
+
+        //Create a for loop to initiate start automatically for each value
+        for(int i=0; i < hobbies.size();i++) {
+
+        //set up commands for your chrome
+        driver.manage().window().fullscreen();
+
+        //sleep statement
+        Thread.sleep(3000);
+
+        //Navigate to website
+        driver.navigate().to("https://www.bing.com");
+        //Locate element for search and enter values from the array list for automation
+        driver.findElement(By.xpath("//*[@name='q']")).sendKeys(hobbies.get(i));
+        //locate element for enter and submit
+        driver.findElement(By.xpath("//*[@id='search_icon']")).submit();
+        //sleep statement
+           Thread.sleep(3000);
+         //Split and retrieve search results
+            String result = driver.findElement(By.xpath("//*[@class='sb_count']")).getText();
+            String[] splitResult = result.split(" ");
+            //print the statement as needed
+            System.out.println("The search result for " + hobbies.get(i) + " " + "is" + " " + splitResult[0]);
+
+            Thread.sleep(3000);
+        }//end of loop
+
+       //quit driver to end session
+        driver.quit();
+
+    }//end of main
+}//end of java
Index: src/test/java/ActionItems/ActionItem_01.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ActionItems/ActionItem_01.java b/src/test/java/ActionItems/ActionItem_01.java
new file mode 100644
--- /dev/null	(date 1664741305237)
+++ b/src/test/java/ActionItems/ActionItem_01.java	(date 1664741305237)
@@ -0,0 +1,26 @@
+package ActionItems;
+
+import java.util.ArrayList;
+
+public class ActionItem_01 {
+    public static void main(String[] args) {
+        //define array list
+        ArrayList<String> countries = new ArrayList<>();
+        countries.add("USA");
+        countries.add("Pakistan");
+        countries.add("Turkey");
+        countries.add("Switzerland");
+        countries.add("UAE");
+
+        ArrayList<String> countryCode = new ArrayList<>();
+        countryCode.add("+01");
+        countryCode.add("+92");
+        countryCode.add("+90");
+        countryCode.add("+41");
+        countryCode.add("+971");
+
+        for(int i =0;i < countries.size(); i++) {
+            System.out.println("My country is " + countries.get(i) + " " + "and it's country code is" + " " + countryCode.get(i));
+        }//end of for loop
+    }//end of main
+}//end of java class
Index: src/test/java/Day2_100222/T4_WhileLoop_LinearArray.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day2_100222/T4_WhileLoop_LinearArray.java b/src/test/java/Day2_100222/T4_WhileLoop_LinearArray.java
new file mode 100644
--- /dev/null	(date 1666570051650)
+++ b/src/test/java/Day2_100222/T4_WhileLoop_LinearArray.java	(date 1666570051650)
@@ -0,0 +1,21 @@
+package Day2_100222;
+
+public class T4_WhileLoop_LinearArray {
+    public static void main(String[] args) {
+        //declare and define linear array for street number
+        //you can use an Array List for while loop as well
+        int[] streetNumber = new int[]{111,222,333,444,555,666,777};
+        //iterate through all street number by while loop
+        //set the initializer
+        int i = 0;
+        //now set the condition for while loop - until you want to run the while loop
+        //linear array gets the count by using .length command
+        while(i<streetNumber.length){
+            System.out.println("Street Number: " + streetNumber[i]);
+
+            //incrementation goes at the end of the loop
+            i=i+1;
+            //or you can use i++;
+        }//end of the loop
+    }//end of the main
+}//end of java
Index: src/test/java/Review_Session/Exercise3_12OCT.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Review_Session/Exercise3_12OCT.java b/src/test/java/Review_Session/Exercise3_12OCT.java
new file mode 100644
--- /dev/null	(date 1665624362793)
+++ b/src/test/java/Review_Session/Exercise3_12OCT.java	(date 1665624362793)
@@ -0,0 +1,23 @@
+package Review_Session;
+
+public class Exercise3_12OCT {
+    public static void main(String[] args) {
+        //define automation string variable
+        String subjectLine = "Automation_AI05";
+
+        //As a professor, I would like to see only the action item number
+        //might be useful to use split method
+        //how could you grab the number portion of the second part of the string
+        //expected result should be 05
+
+        String[] splitMessage = subjectLine.split("AI");
+        System.out.println(splitMessage[1]);
+
+        String[] splitMessageArray = subjectLine.split("_");
+        //take the second string from the array then grab the number only
+        String actionItemNumber = splitMessageArray[1].substring(2);
+        //print out John to the console
+        System.out.println("The action number item is " + actionItemNumber);
+    }//end of main
+}//end of class
+
Index: src/test/java/ActionItems/ActionItem_01P2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ActionItems/ActionItem_01P2.java b/src/test/java/ActionItems/ActionItem_01P2.java
new file mode 100644
--- /dev/null	(date 1665104251574)
+++ b/src/test/java/ActionItems/ActionItem_01P2.java	(date 1665104251574)
@@ -0,0 +1,20 @@
+package ActionItems;
+
+public class ActionItem_01P2 {
+    public static void main(String[] args) {
+        //declare string
+        String [] region;
+        int[] areaCode;
+        //define linear array
+        region = new String[]{"New York", "Long Island", "Queens", "Brooklyn", "Bronx"};
+        areaCode = new int []{11111,22222,33333,44444,5555};
+
+        int i =0;
+        while (i <region.length){
+            System.out.println("My region is " + region[i]+ " " + areaCode[i]);
+            i++;
+        }//end of loop
+        System.out.println("The length of area code is :" + areaCode.length);
+        System.out.println("The length of region is: " + region.length);
+    }//end of main
+}//end of java
Index: src/test/java/Day5_101522/T1_XpathTextContains.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day5_101522/T1_XpathTextContains.java b/src/test/java/Day5_101522/T1_XpathTextContains.java
new file mode 100644
--- /dev/null	(date 1665845466808)
+++ b/src/test/java/Day5_101522/T1_XpathTextContains.java	(date 1665845466808)
@@ -0,0 +1,31 @@
+package Day5_101522;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.chrome.ChromeDriver;
+
+public class T1_XpathTextContains {
+    public static void main(String[] args) throws InterruptedException {
+        //setup your chromedriver with webdrivermanager
+        WebDriverManager.chromedriver().setup();
+
+        //define the webdriver
+        WebDriver driver = new ChromeDriver();
+
+        //go to yahoo page
+        driver.navigate().to("https://www.yahoo.com");
+
+        //click on sign in button
+        driver.findElement(By.xpath("//*[text()= 'Sign in']")).click();
+
+        //wait two seconds
+        Thread.sleep(3000);
+
+        //quit chrome
+        driver.quit();
+
+
+
+    }//end of main
+}//end of class
Index: src/test/java/Review_Session/Exercise1_05OCT.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Review_Session/Exercise1_05OCT.java b/src/test/java/Review_Session/Exercise1_05OCT.java
new file mode 100644
--- /dev/null	(date 1665021288262)
+++ b/src/test/java/Review_Session/Exercise1_05OCT.java	(date 1665021288262)
@@ -0,0 +1,17 @@
+package Review_Session;
+
+public class Exercise1_05OCT {
+    public static void main(String[] args) {
+        //define and declare linear array
+        String[] carBrands= new String[]{"Honda", "Toyota", "Mercedes", "BMW", "Nissan"};
+        //create while loop
+        int i= 0;
+        while(i< carBrands.length){
+            System.out.println("My car wish includes " +carBrands[i]);
+            i++;
+            //combine conditions in while loop with and/or operator
+            //&& and operator
+            //|| or operator
+        }//end of loop
+    }//end of main
+}//end of java
Index: src/test/java/Day6_101622/T1_FindElements.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day6_101622/T1_FindElements.java b/src/test/java/Day6_101622/T1_FindElements.java
new file mode 100644
--- /dev/null	(date 1665932369503)
+++ b/src/test/java/Day6_101622/T1_FindElements.java	(date 1665932369503)
@@ -0,0 +1,31 @@
+package Day6_101622;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+
+public class T1_FindElements {
+    public static void main(String[] args) throws InterruptedException {
+
+        WebDriverManager.chromedriver().setup();
+        ChromeOptions options = new ChromeOptions();
+        //add the options for maximizing the chrome meeting
+        //options.addArguments("start-fullscreen") for mac
+        options.addArguments("start-fullscreen");
+        //define the chrome driver to use for your test
+        //creating an instance for a chrome driver(browser) to use for automation
+        WebDriver driver = new ChromeDriver(options);
+        //navigate to the google site
+        driver.navigate().to("https://www.yahoo.com");
+        //wait for few seconds
+        Thread.sleep(3000);
+        //using find elements i want to click on second link within the group which is news
+        driver.findElements(By.xpath("//*[contains(@class,'_yb_sc88r')]")).get(1).click();
+        //wait few seconds
+        Thread.sleep(3000);
+        //quit driver
+        driver.quit();
+    }//end of main
+}//end of class
Index: src/test/java/Review_Session/Exercise2_05OCT.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Review_Session/Exercise2_05OCT.java b/src/test/java/Review_Session/Exercise2_05OCT.java
new file mode 100644
--- /dev/null	(date 1665019388644)
+++ b/src/test/java/Review_Session/Exercise2_05OCT.java	(date 1665019388644)
@@ -0,0 +1,18 @@
+package Review_Session;
+
+import java.util.ArrayList;
+
+public class Exercise2_05OCT {
+    public static void main(String[] args) {
+        ArrayList phoneNumbers = new ArrayList<>();
+        phoneNumbers.add("717.222.2322");
+        phoneNumbers.add("212.234.3245");
+        phoneNumbers.add("346.223.1231");
+        phoneNumbers.add("646.322.5656");
+        phoneNumbers.add("347.929.4864");
+
+        for(int i=0; i<phoneNumbers.size();i++){
+            System.out.println("The following phone number requested: " + phoneNumbers.get(i));
+        }//end of loop
+    }//end of main
+}//end of java
Index: src/test/java/Day6_101622/T3_mlcalc_loop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day6_101622/T3_mlcalc_loop.java b/src/test/java/Day6_101622/T3_mlcalc_loop.java
new file mode 100644
--- /dev/null	(date 1665937613996)
+++ b/src/test/java/Day6_101622/T3_mlcalc_loop.java	(date 1665937613996)
@@ -0,0 +1,85 @@
+package Day6_101622;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+
+import java.util.ArrayList;
+
+public class T3_mlcalc_loop {
+    public static void main(String[] args) throws InterruptedException {
+            //define WebDriver as chrome driver
+            WebDriverManager.chromedriver().setup();
+
+            ChromeOptions options = new ChromeOptions();
+            options.addArguments("start-fullscreen");
+
+            WebDriver driver = new ChromeDriver(options);
+
+        //create sets of array list for purchase price, down payment, interest rate
+       ArrayList<String> purchasePrice, downPayment, interestRate;
+        purchasePrice = new ArrayList<>();
+        purchasePrice.add("350000");
+        purchasePrice.add("370000");
+        purchasePrice.add("380000");
+
+        //down payment arraylist
+        downPayment = new ArrayList<>();
+        downPayment.add("25");
+        downPayment.add("30");
+        downPayment.add("35");
+
+        //interestRate
+        interestRate = new ArrayList<>();
+        interestRate.add("3.4");
+        interestRate.add("4.1");
+        interestRate.add("2.8");
+
+
+        for (int i=0; i < interestRate.size(); i++) {
+            //navigate to the google site
+            driver.navigate().to("https://www.mlcalc.com");
+
+            //sleep statement
+            Thread.sleep(3000);
+
+            //clear and enter a new value on purchase price field
+            WebElement pPrice = driver.findElement(By.xpath("//*[@name='ma']"));
+            //clear the purchase price
+            pPrice.clear();
+            //type new value on the purchase price
+            pPrice.sendKeys(purchasePrice.get(i));
+
+            //clear and enter a new value on down payment field
+            WebElement dPayment = driver.findElement(By.xpath("//*[@name='dp']"));
+            //clear the down payment
+            dPayment.clear();
+            //type new value on the down payment
+            dPayment.sendKeys(downPayment.get(i));
+
+            //clear and enter a new value on interest rate field
+            WebElement intRate = driver.findElement(By.xpath("//*[@name='ir']"));
+            //clear the down payment
+            intRate.clear();
+            //type new value on the down payment
+            intRate.sendKeys(interestRate.get(i));
+
+            //click on calculate button
+            driver.findElement(By.xpath("//*[@value='Calculate']")).click();
+
+            Thread.sleep(3000);
+
+            //capture and print monthly payment value
+            String mntPayment = driver.findElements(By.xpath("//*[@style='font-size: 32px']")).get(0).getText();
+            System.out.println("Monthly payment: " + mntPayment);
+
+            //quit driver
+            driver.quit();
+
+        }//end of for loop
+        }//end of main
+}//end of java
+
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1668274436159)
+++ b/.gitignore	(date 1668274436159)
@@ -0,0 +1,2 @@
+# Project exclude paths
+/target/
\ No newline at end of file
Index: src/test/java/Day3_100822/T1_if_else_condition.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day3_100822/T1_if_else_condition.java b/src/test/java/Day3_100822/T1_if_else_condition.java
new file mode 100644
--- /dev/null	(date 1665250225516)
+++ b/src/test/java/Day3_100822/T1_if_else_condition.java	(date 1665250225516)
@@ -0,0 +1,16 @@
+package Day3_100822;
+
+public class T1_if_else_condition {
+    public static void main(String[] args) {
+        //declaring two integer variables for if else conditions
+        int a,b;
+        a = 1;
+        b = 3;
+        //verify if a is less than b or not
+        if(a < b){
+            System.out.println("a is less than b");
+        }else {
+            System.out.println("a is either greater or equal to b");
+        }//end of if else  condition
+    }//end of main
+}//end of java class
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1668274511534)
+++ b/.idea/vcs.xml	(date 1668274511534)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: src/test/java/Day3_100822/T2_Multiple_conditions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day3_100822/T2_Multiple_conditions.java b/src/test/java/Day3_100822/T2_Multiple_conditions.java
new file mode 100644
--- /dev/null	(date 1665250225502)
+++ b/src/test/java/Day3_100822/T2_Multiple_conditions.java	(date 1665250225502)
@@ -0,0 +1,19 @@
+package Day3_100822;
+
+public class T2_Multiple_conditions {
+    public static void main(String[] args) {
+        int a, b, c;
+        a = 1;
+        b = 2;
+        c = 4;
+
+        //write a multiple conditional statements that covers when a+b < c, a+b > c or a+b = c
+        if(a+b < c){
+            System.out.println(" a & b is less than c");
+        } else if(a+b > c){
+            System.out.println("a & b is greater than c");
+        }else {
+            System.out.println(" a & b is equal to c");
+        }//end of multiple conditions
+    }//end of main method
+}//end of java
Index: src/test/java/ActionItems/ActionItem_AI3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/ActionItems/ActionItem_AI3.java b/src/test/java/ActionItems/ActionItem_AI3.java
new file mode 100644
--- /dev/null	(date 1666321816809)
+++ b/src/test/java/ActionItems/ActionItem_AI3.java	(date 1666321816809)
@@ -0,0 +1,55 @@
+package ActionItems;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+
+import java.util.ArrayList;
+
+public class ActionItem_AI3 {
+    public static void main(String[] args) throws InterruptedException {
+
+        //define Webdriver browser as Chrome driver
+        WebDriverManager.chromedriver().setup();
+        ChromeOptions options = new ChromeOptions();
+        options.addArguments("Incognito");
+        options.addArguments("start-fullscreen");
+
+        WebDriver driver = new ChromeDriver(options);
+
+        ArrayList<String> zipCode = new ArrayList<>();
+        zipCode.add("11420");
+        zipCode.add("11435");
+        zipCode.add("11367");
+
+
+       for(int i = 0; i <zipCode.size(); i++){
+
+            //navigate to weight watcher website
+            driver.navigate().to("https://www.weightwatchers.com/us/special");
+
+            //Wait 3 seconds
+            Thread.sleep(3000);
+            //locate element and select find workshop
+            driver.findElements(By.xpath("//*[contains(@class, '__ZwyL0')]")).get(0).click();
+
+            WebElement zZipcode = driver.findElement(By.xpath("//*[@id='location-search']"));
+            zZipcode.clear();
+            zZipcode.sendKeys(zipCode.get(i));
+
+            Thread.sleep(3000);
+
+            driver.findElement(By.xpath("//*[@id='location-search-cta']")).click();
+
+            //String nearLocation = driver.findElements(By.xpath("//*[@class='address-3-YC0']")).get(0).getText();
+           //System.out.println("Addresses nearby: "+ nearLocation);
+
+       }//end of loop
+        driver.quit();
+
+    }//end of main
+
+}//end of class
Index: src/test/java/Day6_101622/T2_WebElement_Mlcalc.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day6_101622/T2_WebElement_Mlcalc.java b/src/test/java/Day6_101622/T2_WebElement_Mlcalc.java
new file mode 100644
--- /dev/null	(date 1665935777285)
+++ b/src/test/java/Day6_101622/T2_WebElement_Mlcalc.java	(date 1665935777285)
@@ -0,0 +1,43 @@
+package Day6_101622;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+
+public class T2_WebElement_Mlcalc {
+    public static void main(String[] args) throws InterruptedException {
+
+        //define WebDriver as chrome driver
+        WebDriverManager.chromedriver().setup();
+
+        ChromeOptions options = new ChromeOptions();
+        options.addArguments("start-fullscreen");
+
+        WebDriver driver = new ChromeDriver(options);
+
+        driver.navigate().to("https://www.mlcalc.com");
+        Thread.sleep(3000);
+
+        //clear and enter a new value on purchase price field
+        WebElement pPrice = driver.findElement(By.xpath("//*[@name='ma']"));
+        //clear the purchase price
+        pPrice.clear();
+        //type new value on the purchase price
+        pPrice.sendKeys("45000");
+
+        //clear and enter a new vakue on down payment field
+        WebElement dPayment = driver.findElement(By.xpath("//*[@name= 'dp']"));
+        //clear the down payment
+        dPayment.clear();
+        //type new value on the down payment
+        dPayment.sendKeys("25");
+
+        Thread.sleep(3000);
+
+        //quit driver
+        driver.quit();
+    }//end of main
+}//end of class
Index: src/test/java/Day6_101622/T4_Mcalc_Scroll.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day6_101622/T4_Mcalc_Scroll.java b/src/test/java/Day6_101622/T4_Mcalc_Scroll.java
new file mode 100644
--- /dev/null	(date 1665940995971)
+++ b/src/test/java/Day6_101622/T4_Mcalc_Scroll.java	(date 1665940995971)
@@ -0,0 +1,67 @@
+package Day6_101622;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.JavascriptExecutor;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+
+public class T4_Mcalc_Scroll {
+    public static void main(String[] args) throws InterruptedException {
+       /* //define WebDriver as chrome driver
+        WebDriverManager.chromedriver().setup();
+
+        ChromeOptions options = new ChromeOptions();
+        options.addArguments("start-fullscreen");
+
+        WebDriver driver = new ChromeDriver(options);
+
+        driver.navigate().to("https://www.mlcalc.com");
+
+        //define javascript executor
+        JavascriptExecutor jse = (JavascriptExecutor)driver;
+        //scroll down to 800 pixels
+        jse.executeScript("scroll(0,800)");
+        //wait 2 seconds
+        Thread.sleep(2000);
+        //scroll up to 400 pixels
+        jse.executeScript("scroll(0, -400)");
+        //wait 2 seconds
+        Thread.sleep(2000);*/
+
+        //setup your chromedriver with webdrivermanager
+        WebDriverManager.chromedriver().setup();
+        //initialize chrome options
+        ChromeOptions options = new ChromeOptions();
+        //add options for maximizing the chrome window
+        options.addArguments("start-maximized", "incognito");
+        //define the webdriver and pass the options into the method
+        WebDriver driver = new ChromeDriver(options);
+        //go to mortgage calc site
+        driver.navigate().to("https://www.mlcalc.com");
+        //wait 3 secs
+        Thread.sleep(1000);
+
+        //define javascript executor
+        JavascriptExecutor jse = (JavascriptExecutor) driver;
+        //scroll down to 800 pixels
+        jse.executeScript("scroll(0,2000)");
+        //wait 2 secs
+        Thread.sleep(2000);
+        //scroll up to 400 pixels
+        jse.executeScript("scroll(0,-1)");
+        //wait 2 secs
+        Thread.sleep(2000);
+        //store calculate button into webelement variable
+        WebElement calculateButton = driver.findElement(By.xpath("//*[@value='Calculate']"));
+        //scroll into view of calculate button
+        jse.executeScript("arguments[0].scrollIntoView(true);", calculateButton);
+        //wait 2 secs
+        Thread.sleep(2000);
+        //quit chrome
+        driver.quit();
+
+    }//end of main
+}//end of class
Index: src/test/java/Day5_101522/T2_ChromeOptions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day5_101522/T2_ChromeOptions.java b/src/test/java/Day5_101522/T2_ChromeOptions.java
new file mode 100644
--- /dev/null	(date 1665852339237)
+++ b/src/test/java/Day5_101522/T2_ChromeOptions.java	(date 1665852339237)
@@ -0,0 +1,37 @@
+package Day5_101522;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+
+public class T2_ChromeOptions {
+    public static void main(String[] args) {
+//setup your chromedriver with webdrivermanager
+        WebDriverManager.chromedriver().setup();
+        //initialize chrome options
+    ChromeOptions options = new ChromeOptions();
+    //add options for maximizing the chrome window
+       // options.addArguments("start-maximized","incognito");
+    //        options.addArguments("headless");
+    //for mac use "start-fullscreen"
+    options.addArguments("start-fullscreen");
+    //define the webdriver and pass the options into the method
+    WebDriver driver = new ChromeDriver(options);
+    //go to google page
+        driver.navigate().to("https://www.google.com");
+    //locate element for search field and type cars
+    //this is an example of relative xpath
+        driver.findElement(By.xpath("//*[@name = 'q']")).sendKeys("cars");
+    //submit on google search button
+        driver.findElement(By.xpath("//*[@name ='btnK']")).submit();
+        //capture the search result and print it
+    String searchResult = driver.findElement(By.xpath("//*[@id='result-stats']")).getText();
+    //extract out the number and print the search number only
+    String[] arrayResult = searchResult.split(" ");
+        System.out.println("My search number is "+arrayResult[1]);
+    //quit driver
+        driver.quit();
+}//end of main
+}//end of class
Index: src/test/java/Day7_102222/T1_Select_Statement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day7_102222/T1_Select_Statement.java b/src/test/java/Day7_102222/T1_Select_Statement.java
new file mode 100644
--- /dev/null	(date 1666450297521)
+++ b/src/test/java/Day7_102222/T1_Select_Statement.java	(date 1666450297521)
@@ -0,0 +1,46 @@
+package Day7_102222;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.WebElement;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+import org.openqa.selenium.support.ui.Select;
+
+public class T1_Select_Statement {
+    public static void main(String[] args) throws InterruptedException {
+        //define the webdriver manager set up for chromedriver
+        WebDriverManager.chromedriver().setup();
+
+        ChromeOptions options = new ChromeOptions();
+
+        options.addArguments("start-fullscreen");
+
+        WebDriver driver = new ChromeDriver(options);
+
+        //navigate to mlcalc
+        driver.navigate().to("https://www.mlcalc.com");
+        Thread.sleep(2000);
+        driver.findElement(By.xpath("//*[text()='Show advanced options']")).click();
+        Thread.sleep(2000);
+
+        //use select command for month dropdown
+        WebElement strtMonth = driver.findElement(By.xpath("//*[@name='sm']"));
+        Select startMonthDropDown = new Select(strtMonth);
+        //select by visible text
+        startMonthDropDown.selectByVisibleText("Nov");
+
+        //use select command for your dropdown
+       // WebElement startYear = driver.findElement(By.xpath("//*[@name ='sy']"));
+       // Select startYearDropDown = new Select(startYear);
+
+        //select by visible text
+       // startYearDropDown.selectByVisibleText("2023");
+
+        driver.findElement(By.xpath("//*[@name= 'sy']")).click();
+        driver.findElement(By.xpath("//*[text()='2023']")).click();
+
+
+    }//end of main
+}//end of java class
Index: src/test/java/Day3_100822/ReusableClass.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day3_100822/ReusableClass.java b/src/test/java/Day3_100822/ReusableClass.java
new file mode 100644
--- /dev/null	(date 1665249631793)
+++ b/src/test/java/Day3_100822/ReusableClass.java	(date 1665249631793)
@@ -0,0 +1,18 @@
+package Day3_100822;
+
+public class ReusableClass {
+
+    //create a void method that will add two numbers and execute the print statement
+    public static void addTwoNumbers(int a, int b){
+        int result = a+b;
+        System.out.println("The result is " + result);
+    }//end of add TwoNumbers
+
+    //create a return method that will add two numbers and return the result from the print statement
+    public static int returnTwoAddNumbers(int a, int b){
+        int result = a+b;
+        System.out.println("The return result is " + result);
+        return result;
+    }//end of return result
+}//end of Java Class
+
Index: src/test/java/Day3_100822/T3_ArrayList_Loop_Conditions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day3_100822/T3_ArrayList_Loop_Conditions.java b/src/test/java/Day3_100822/T3_ArrayList_Loop_Conditions.java
new file mode 100644
--- /dev/null	(date 1665250225520)
+++ b/src/test/java/Day3_100822/T3_ArrayList_Loop_Conditions.java	(date 1665250225520)
@@ -0,0 +1,32 @@
+package Day3_100822;
+
+import java.util.ArrayList;
+
+public class T3_ArrayList_Loop_Conditions {
+    public static void main(String[] args) {
+        //<>refers to anchor
+        ArrayList<String> countries = new ArrayList<>();
+        countries.add("USA");
+        countries.add("Canada");
+        countries.add("Bangladesh");
+        countries.add("India");
+        countries.add("Australia");
+
+        //using for loop to iterate through countries list and print out only the country is USA or Australia
+        //single equal use to identify variable, conditional statements require two equal signs
+        for(int i =0; i < countries.size();i++){
+            //two equal will compare the values from right and left side
+            //whereas one equal use to set a value for a variable
+           /* if(countries.get(i) == "USA") {
+                System.out.println("Country is USA and index i is " + i);
+            }else if(countries.get(i) == "Australia"){
+                        System.out.println("Country is Australia, and index i is " + i);
+                    }//end of multiple condition*/
+            //using OR(||) operator you can write both/multiple conditions on one if statement
+            if(countries.get(i) =="USA" || countries.get(i) == "Australia") {
+                System.out.println("Country is " + countries.get(i) + " and index i is " + i);
+            }//end of condition
+        }//end of for loop
+        }//end of main method
+    }//end of java class
+
Index: src/test/java/Day7_102222/T2_SwitchTabs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day7_102222/T2_SwitchTabs.java b/src/test/java/Day7_102222/T2_SwitchTabs.java
new file mode 100644
--- /dev/null	(date 1666457216057)
+++ b/src/test/java/Day7_102222/T2_SwitchTabs.java	(date 1666457216057)
@@ -0,0 +1,64 @@
+package Day7_102222;
+
+import io.github.bonigarcia.wdm.WebDriverManager;
+import org.openqa.selenium.By;
+import org.openqa.selenium.WebDriver;
+import org.openqa.selenium.chrome.ChromeDriver;
+import org.openqa.selenium.chrome.ChromeOptions;
+
+import java.util.ArrayList;
+
+public class T2_SwitchTabs {
+    public static void main(String[] args) throws InterruptedException {
+
+
+    //setup your chromedriver with webdrivermanager
+    WebDriverManager.chromedriver().setup();
+
+    //initialize chrome options
+    ChromeOptions options = new ChromeOptions();
+
+    //add options for maximizing the chrome window
+    options.addArguments("start-fullschreen", "incognito");
+
+    WebDriver driver = new ChromeDriver(options);
+
+    driver.navigate().to("https://www.fideliscare.org");
+
+        //click on shop for a plan
+        driver.findElement(By.xpath("//*[text() = 'Shop For a Plan']")).click();
+        //wait a bit
+        Thread.sleep(2000);
+        //click on medicaid managed care
+        driver.findElement(By.xpath("//*[text() = 'Medicaid Managed Care']")).click();
+        //wait a bit
+        Thread.sleep(2000);
+        //click on find a doctor search icon (which will launch a new tab)
+        driver.findElement(By.xpath("//*[@class= 'btn btn-outline-primary btn-external btn-show link-external']")).click();
+        //wait a bit
+        Thread.sleep(2000);
+
+        //store the tabs in arraylist
+        ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());
+        //switch to the new tab
+        driver.switchTo().window(tabs.get(1));
+        //enter a zip code on the search field
+        driver.findElement(By.xpath("//*[@id = 'searchLocation']")).sendKeys("11230");
+        //wait a bit
+        Thread.sleep(2000);
+        //close the find a doctor tab
+        driver.close();
+        //switch to the initial tab (parent tab)
+        driver.switchTo().window(tabs.get(0));
+        System.out.println("Parent tab is " + tabs.get(0));
+        //go to the home page again
+        driver.navigate().to("https://www.fideliscare.org/");
+        Thread.sleep(2000);
+        //click on get coverage, first match is index 0
+        driver.findElements(By.xpath("//*[@class = 'btn ng-binding btn-primary']")).get(0).click();
+        Thread.sleep(2000);
+
+        driver.quit();
+    }//end of main
+
+}//end of class
Index: src/test/java/Day3_100822/T5_ReturnMethodExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day3_100822/T5_ReturnMethodExample.java b/src/test/java/Day3_100822/T5_ReturnMethodExample.java
new file mode 100644
--- /dev/null	(date 1665250225508)
+++ b/src/test/java/Day3_100822/T5_ReturnMethodExample.java	(date 1665250225508)
@@ -0,0 +1,10 @@
+package Day3_100822;
+
+public class T5_ReturnMethodExample {
+
+    public static void main(String[] args) {
+
+    int value = ReusableClass.returnTwoAddNumbers(7,3 );
+        System.out.println("new value is " +(value-3));
+    }//end of main
+}//end of java
Index: src/test/java/Day3_100822/T4_VoidMethodExample.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/Day3_100822/T4_VoidMethodExample.java b/src/test/java/Day3_100822/T4_VoidMethodExample.java
new file mode 100644
--- /dev/null	(date 1665250225512)
+++ b/src/test/java/Day3_100822/T4_VoidMethodExample.java	(date 1665250225512)
@@ -0,0 +1,10 @@
+package Day3_100822;
+
+public class T4_VoidMethodExample {
+    public static void main(String[] args) {
+
+        //call the addTwoNumbers method to execute inside main
+        ReusableClass.addTwoNumbers(12, 2);
+
+    }//end of main
+}//end of java class
